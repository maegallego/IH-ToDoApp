{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { mapState, mapActions } from 'pinia';\nimport taskStore from '@/store/task';\nimport userStore from '@/store/user';\nexport default {\n  name: 'AuthView.vue',\n  data: function data() {\n    return {\n      titleTask: '',\n      priority: 'Low',\n      description: '',\n      completed: false,\n      errorMessage: '',\n      is_complete: false\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapState(taskStore, ['tasks'])), mapState(userStore, ['user'])),\n  methods: _objectSpread(_objectSpread({}, mapActions(taskStore, ['createTask'])), {}, {\n    handleNewTask: function handleNewTask() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var newTask;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                newTask = {\n                  title: _this.titleTask,\n                  user_id: _this.user.id,\n                  priority: _this.priority,\n                  description: _this.description,\n                  is_complete: _this.is_complete\n                };\n                _context.prev = 1;\n                _context.next = 4;\n                return _this.createTask(newTask);\n\n              case 4:\n                _this.$router.push({\n                  path: '/'\n                });\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                _this.errorMessage = _context.t0.message;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }))();\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;AA0CA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,cADO;EAEbC,IAFa,kBAEN;IACL,OAAO;MACLC,SAAS,EAAE,EADN;MAELC,QAAQ,EAAE,KAFL;MAGLC,WAAW,EAAE,EAHR;MAILC,SAAS,EAAE,KAJN;MAKLC,YAAY,EAAE,EALT;MAMLC,WAAW,EAAE;IANR,CAAP;EAQD,CAXY;EAYbC,QAAQ,kCACHZ,QAAQ,CAACE,SAAD,EAAY,CAAC,OAAD,CAAZ,CADL,GAEHF,QAAQ,CAACG,SAAD,EAAY,CAAC,MAAD,CAAZ,CAFL,CAZK;EAgBbU,OAAO,kCACFZ,UAAU,CAACC,SAAD,EAAY,CAAC,YAAD,CAAZ,CADR;IAECY,aAFD,2BAEiB;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACdC,OADc,GACJ;kBACdC,KAAK,EAAE,KAAI,CAACV,SADE;kBAEdW,OAAO,EAAE,KAAI,CAACC,IAAL,CAAUC,EAFL;kBAGdZ,QAAQ,EAAE,KAAI,CAACA,QAHD;kBAIdC,WAAW,EAAE,KAAI,CAACA,WAJJ;kBAKdG,WAAW,EAAE,KAAI,CAACA;gBALJ,CADI;gBAAA;gBAAA;gBAAA,OASZ,KAAI,CAACS,UAAL,CAAgBL,OAAhB,CATY;;cAAA;gBAUlB,KAAI,CAACM,OAAL,CAAaC,IAAb,CAAkB;kBAAEC,IAAI,EAAE;gBAAR,CAAlB;;gBAVkB;gBAAA;;cAAA;gBAAA;gBAAA;gBAYlB,KAAI,CAACb,YAAL,GAAoB,YAAMc,OAA1B;;cAZkB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAcrB;EAhBI;AAhBM,CAAf","names":["mapState","mapActions","taskStore","userStore","name","data","titleTask","priority","description","completed","errorMessage","is_complete","computed","methods","handleNewTask","newTask","title","user_id","user","id","createTask","$router","push","path","message"],"sourceRoot":"","sources":["/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/src/components/CreateTask.vue"],"sourcesContent":["<template>\n  <div>\n      <form class='align-left'>\n          <div>\n              <label for='titleTask'>Title\n                  <input class='full-width form-input'\n                  name='titleTask'\n                  type='text'\n                  placeholder='Ir a Correos'\n                  v-model='titleTask'\n                  required\n                  />\n              </label>\n          </div>\n          <div>Description\n            <textarea v-model='description'\n            class='full-width form-input' placeholder='Llevar el DNI. Recoger carta.' required>\n            </textarea>\n          </div>\n          <div></div>\n          <div>\n            Select priority:\n            <select v-model='priority'>\n              <option value='Low' selected>Low</option>\n              <option value='Medium'>Medium</option>\n              <option value='High'>High</option>\n              <option value='Urgent'>Urgent</option>\n              required\n            </select>\n          </div>\n          <label for='is_complete'>Task completed\n            <input type='checkbox' id='checkbox' v-model='is_complete' />\n          </label>\n          <button class='transparent-btn bg-purple' @click.prevent='handleNewTask'>Add Task</button>\n      </form>\n    <div v-if=\"errorMessage\">\n        {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'pinia';\nimport taskStore from '@/store/task';\nimport userStore from '@/store/user';\n\nexport default {\n  name: 'AuthView.vue',\n  data() {\n    return {\n      titleTask: '',\n      priority: 'Low',\n      description: '',\n      completed: false,\n      errorMessage: '',\n      is_complete: false,\n    };\n  },\n  computed: {\n    ...mapState(taskStore, ['tasks']),\n    ...mapState(userStore, ['user']),\n  },\n  methods: {\n    ...mapActions(taskStore, ['createTask']),\n    async handleNewTask() {\n      const newTask = {\n        title: this.titleTask,\n        user_id: this.user.id,\n        priority: this.priority,\n        description: this.description,\n        is_complete: this.is_complete,\n      };\n      try {\n        await this.createTask(newTask);\n        this.$router.push({ path: '/' });\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}