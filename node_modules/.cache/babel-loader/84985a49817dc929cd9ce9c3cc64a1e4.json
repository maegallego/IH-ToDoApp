{"ast":null,"code":"import { defineStore } from 'pinia';\nimport supabase from '@/supabase/index';\nexport default defineStore('user', {\n  state: () => ({\n    user: null\n  }),\n  actions: {\n    async fetchUser() {\n      const user = await supabase.auth.user();\n      this.user = user;\n    },\n\n    async signUp(email, password) {\n      const {\n        user,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password\n      });\n      if (error) throw error;\n      if (user) this.user = user;\n    },\n\n    async signOut() {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n      this.user = null;\n    },\n\n    async signIn(email, password) {\n      const {\n        user,\n        error\n      } = await supabase.auth.signIn({\n        email,\n        password\n      });\n      if (error) throw error;\n      if (user) this.user = user;\n    }\n\n  },\n  persist: {\n    enabled: true,\n    strategies: [{\n      key: 'user',\n      storage: localStorage\n    }]\n  }\n});","map":{"version":3,"names":["defineStore","supabase","state","user","actions","fetchUser","auth","signUp","email","password","error","signOut","signIn","persist","enabled","strategies","key","storage","localStorage"],"sources":["/Users/maegallego/Desktop/IRONHACK/clonedproject/ToDoApp/to-do-list/src/store/user.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport supabase from '@/supabase/index';\n\nexport default defineStore('user', {\n  state: () => ({\n    user: null,\n  }),\n\n  actions: {\n    async fetchUser() {\n      const user = await supabase.auth.user();\n      this.user = user;\n    },\n    async signUp(email, password) {\n      const { user, error } = await supabase.auth.signUp({\n        email,\n        password,\n      });\n      if (error) throw error;\n      if (user) this.user = user;\n    },\n    async signOut() {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      this.user = null;\n    },\n    async signIn(email, password) {\n      const { user, error } = await supabase.auth.signIn({\n        email,\n        password,\n      });\n      if (error) throw error;\n      if (user) this.user = user;\n    },\n  },\n  persist: {\n    enabled: true,\n    strategies: [\n      {\n        key: 'user',\n        storage: localStorage,\n      },\n    ],\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,eAAeD,WAAW,CAAC,MAAD,EAAS;EACjCE,KAAK,EAAE,OAAO;IACZC,IAAI,EAAE;EADM,CAAP,CAD0B;EAKjCC,OAAO,EAAE;IACP,MAAMC,SAAN,GAAkB;MAChB,MAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACK,IAAT,CAAcH,IAAd,EAAnB;MACA,KAAKA,IAAL,GAAYA,IAAZ;IACD,CAJM;;IAKP,MAAMI,MAAN,CAAaC,KAAb,EAAoBC,QAApB,EAA8B;MAC5B,MAAM;QAAEN,IAAF;QAAQO;MAAR,IAAkB,MAAMT,QAAQ,CAACK,IAAT,CAAcC,MAAd,CAAqB;QACjDC,KADiD;QAEjDC;MAFiD,CAArB,CAA9B;MAIA,IAAIC,KAAJ,EAAW,MAAMA,KAAN;MACX,IAAIP,IAAJ,EAAU,KAAKA,IAAL,GAAYA,IAAZ;IACX,CAZM;;IAaP,MAAMQ,OAAN,GAAgB;MACd,MAAM;QAAED;MAAF,IAAY,MAAMT,QAAQ,CAACK,IAAT,CAAcK,OAAd,EAAxB;MACA,IAAID,KAAJ,EAAW,MAAMA,KAAN;MACX,KAAKP,IAAL,GAAY,IAAZ;IACD,CAjBM;;IAkBP,MAAMS,MAAN,CAAaJ,KAAb,EAAoBC,QAApB,EAA8B;MAC5B,MAAM;QAAEN,IAAF;QAAQO;MAAR,IAAkB,MAAMT,QAAQ,CAACK,IAAT,CAAcM,MAAd,CAAqB;QACjDJ,KADiD;QAEjDC;MAFiD,CAArB,CAA9B;MAIA,IAAIC,KAAJ,EAAW,MAAMA,KAAN;MACX,IAAIP,IAAJ,EAAU,KAAKA,IAAL,GAAYA,IAAZ;IACX;;EAzBM,CALwB;EAgCjCU,OAAO,EAAE;IACPC,OAAO,EAAE,IADF;IAEPC,UAAU,EAAE,CACV;MACEC,GAAG,EAAE,MADP;MAEEC,OAAO,EAAEC;IAFX,CADU;EAFL;AAhCwB,CAAT,CAA1B"},"metadata":{},"sourceType":"module"}