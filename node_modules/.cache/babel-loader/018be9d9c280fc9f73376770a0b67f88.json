{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavBar), _createVNode(_component_router_view)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;;6DACEA,aAAUC,iBAAV,GACAD,aAAeE,sBAAf","names":["_createVNode","_component_NavBar","_component_router_view"],"sourceRoot":"","sources":["/Users/maegallego/Desktop/IRONHACK/clonedproject/ToDoApp/to-do-list/src/App.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <router-view />\n</template>\n\n<script>\nimport { mapState, mapActions } from 'pinia';\nimport userStore from '@/store/user';\nimport NavBar from './components/NavBar.vue';\n\nexport default {\n  name: 'App',\n  computed: {\n    ...mapState(userStore, ['user']),\n  },\n  methods: {\n    ...mapActions(userStore, ['fetchUser']),\n  },\n  async created() {\n    try {\n      await this.fetchUser();\n      if (!this.user) {\n        this.$router.push({ path: '/auth' });\n      } else {\n        this.$router.push({ path: '/' });\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  },\n  components: { NavBar },\n};\n\n</script>\n\n<style>\n@import '@/assets/styles.css';\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  background-color: #e5e8f8;\n}\n\nnav a {\n  font-weight: bold;\n  color: #363c5d;\n  text-decoration:none;\n}\n\nnav a.router-link-exact-active {\n  color: #857bcd;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}