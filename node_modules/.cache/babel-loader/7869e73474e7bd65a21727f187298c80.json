{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapState, mapActions } from 'pinia';\nimport userStore from '@/store/user';\nexport default {\n  name: 'SignIn',\n  data: function data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  computed: _objectSpread({}, mapState(userStore, ['user'])),\n  methods: _objectSpread(_objectSpread({}, mapActions(userStore, ['signIn'])), {}, {\n    handleSignIn: function handleSignIn() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var userData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userData = {\n                  email: _this.email,\n                  password: _this.password\n                };\n                _context.prev = 1;\n                _context.next = 4;\n                return _this.signIn(userData.email, userData.password);\n\n              case 4:\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](1);\n                _this.errorMessage = _context.t0.message;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 6]]);\n      }))();\n    }\n  })\n};","map":{"version":3,"mappings":";;;AAgCA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,QADO;EAEbC,IAFa,kBAEN;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,QAAQ,EAAE,EAFL;MAGLC,YAAY,EAAE;IAHT,CAAP;EAKD,CARY;EASbC,QAAQ,oBACHR,QAAQ,CAACE,SAAD,EAAY,CAAC,MAAD,CAAZ,CADL,CATK;EAYbO,OAAO,kCACFR,UAAU,CAACC,SAAD,EAAY,CAAC,QAAD,CAAZ,CADR;IAECQ,YAFD,0BAEgB;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACbC,QADa,GACF;kBACfN,KAAK,EAAE,KAAI,CAACA,KADG;kBAEfC,QAAQ,EAAE,KAAI,CAACA;gBAFA,CADE;gBAAA;gBAAA;gBAAA,OAMX,KAAI,CAACM,MAAL,CAAYD,QAAQ,CAACN,KAArB,EAA4BM,QAAQ,CAACL,QAArC,CANW;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAQjB,KAAI,CAACC,YAAL,GAAoB,YAAMM,OAA1B;;cARiB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAUpB;EAZI;AAZM,CAAf","names":["mapState","mapActions","userStore","name","data","email","password","errorMessage","computed","methods","handleSignIn","userData","signIn","message"],"sourceRoot":"","sources":["/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/src/components/SignIn.vue"],"sourcesContent":["<template>\n  <div>\n      <h1>Already have an account?</h1>\n      <form class='align-left' @submit.prevent='handleSignIn'>\n          <div>\n              <label for='email'>Email\n                  <input id='email' class='full-width form-input'\n                  type='email'\n                  placeholder='Email'\n                  v-model='email'\n                  />\n              </label>\n          </div>\n          <div>\n              <label for='password'>Password\n                  <input id='password' class='full-width form-input'\n                  placeholder='Password'\n                  type='password'\n                  v-model='password'\n                  />\n              </label>\n          </div>\n          <button class='transparent-btn bg-purple'\n          @click=\"handleSignIn\">Sign In</button>\n      </form>\n  </div>\n  <div v-if=\"errorMessage\">\n        {{ errorMessage }}\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'pinia';\nimport userStore from '@/store/user';\n\nexport default {\n  name: 'SignIn',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: '',\n    };\n  },\n  computed: {\n    ...mapState(userStore, ['user']),\n  },\n  methods: {\n    ...mapActions(userStore, ['signIn']),\n    async handleSignIn() {\n      const userData = {\n        email: this.email,\n        password: this.password,\n      };\n      try {\n        await this.signIn(userData.email, userData.password);\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}