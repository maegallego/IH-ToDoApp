{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport { defineStore } from 'pinia';\nimport supabase from '../supabase/index';\nexport default defineStore('tasks', {\n  state: function state() {\n    return {\n      tasks: []\n    };\n  },\n  getters: {\n    onlyCompleted: function onlyCompleted() {\n      return this.tasks.filter(function (task) {\n        return task.is_complete;\n      });\n    },\n    onlyPending: function onlyPending() {\n      return this.tasks.filter(function (task) {\n        return !task.is_complete;\n      });\n    }\n  },\n  actions: {\n    fetchTasks: function fetchTasks() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$supabase$from$, tasks;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return supabase.from('tasks').select('*').order('id', {\n                  ascending: false\n                });\n\n              case 2:\n                _yield$supabase$from$ = _context.sent;\n                tasks = _yield$supabase$from$.data;\n                _this.tasks = tasks;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    createTask: function createTask(task) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$supabase$from$2, data, error;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return supabase.from('tasks').insert(task);\n\n              case 2:\n                _yield$supabase$from$2 = _context2.sent;\n                data = _yield$supabase$from$2.data;\n                error = _yield$supabase$from$2.error;\n\n                if (!error) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                throw error;\n\n              case 9:\n                _this2.tasks.push(data[0]);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    deleteTask: function deleteTask(id, taskIndex) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$supabase$from$3, error;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return supabase.from('tasks')[\"delete\"]().match({\n                  id: id\n                });\n\n              case 2:\n                _yield$supabase$from$3 = _context3.sent;\n                error = _yield$supabase$from$3.error;\n\n                if (!error) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw error;\n\n              case 6:\n                _this3.tasks.splice(taskIndex, 1);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    getTaskById: function getTaskById(taskId) {\n      return this.tasks.find(function (task) {\n        return task.id === parseInt(taskId, 10);\n      });\n    }\n  }\n});","map":{"version":3,"names":["defineStore","supabase","state","tasks","getters","onlyCompleted","filter","task","is_complete","onlyPending","actions","fetchTasks","from","select","order","ascending","data","createTask","insert","error","push","deleteTask","id","taskIndex","match","splice","getTaskById","taskId","find","parseInt"],"sources":["/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/src/store/task.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport supabase from '../supabase/index';\n\nexport default defineStore('tasks', {\n  state: () => ({\n    tasks: [],\n  }),\n  getters: {\n    onlyCompleted() {\n      return this.tasks.filter((task) => task.is_complete);\n    },\n    onlyPending() {\n      return this.tasks.filter((task) => !task.is_complete);\n    },\n  },\n  actions: {\n    async fetchTasks() {\n      const { data: tasks } = await supabase\n        .from('tasks')\n        .select('*')\n        .order('id', { ascending: false });\n      this.tasks = tasks;\n    },\n    async createTask(task) {\n      const { data, error } = await supabase\n        .from('tasks')\n        .insert(task);\n      if (error) throw error;\n      else this.tasks.push(data[0]);\n    },\n    async deleteTask(id, taskIndex) {\n      const { error } = await supabase\n        .from('tasks')\n        .delete()\n        .match({ id });\n      if (error) throw error;\n      this.tasks.splice(taskIndex, 1);\n    },\n    getTaskById(taskId) {\n      return this.tasks.find((task) => task.id === parseInt(taskId, 10));\n    },\n  },\n});\n"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,eAAeD,WAAW,CAAC,OAAD,EAAU;EAClCE,KAAK,EAAE;IAAA,OAAO;MACZC,KAAK,EAAE;IADK,CAAP;EAAA,CAD2B;EAIlCC,OAAO,EAAE;IACPC,aADO,2BACS;MACd,OAAO,KAAKF,KAAL,CAAWG,MAAX,CAAkB,UAACC,IAAD;QAAA,OAAUA,IAAI,CAACC,WAAf;MAAA,CAAlB,CAAP;IACD,CAHM;IAIPC,WAJO,yBAIO;MACZ,OAAO,KAAKN,KAAL,CAAWG,MAAX,CAAkB,UAACC,IAAD;QAAA,OAAU,CAACA,IAAI,CAACC,WAAhB;MAAA,CAAlB,CAAP;IACD;EANM,CAJyB;EAYlCE,OAAO,EAAE;IACDC,UADC,wBACY;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACaV,QAAQ,CACnCW,IAD2B,CACtB,OADsB,EAE3BC,MAF2B,CAEpB,GAFoB,EAG3BC,KAH2B,CAGrB,IAHqB,EAGf;kBAAEC,SAAS,EAAE;gBAAb,CAHe,CADb;;cAAA;gBAAA;gBACHZ,KADG,yBACTa,IADS;gBAKjB,KAAI,CAACb,KAAL,GAAaA,KAAb;;cALiB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMlB,CAPM;IAQDc,UARC,sBAQUV,IARV,EAQgB;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACSN,QAAQ,CACnCW,IAD2B,CACtB,OADsB,EAE3BM,MAF2B,CAEpBX,IAFoB,CADT;;cAAA;gBAAA;gBACbS,IADa,0BACbA,IADa;gBACPG,KADO,0BACPA,KADO;;gBAAA,KAIjBA,KAJiB;kBAAA;kBAAA;gBAAA;;gBAAA,MAIJA,KAJI;;cAAA;gBAKhB,MAAI,CAAChB,KAAL,CAAWiB,IAAX,CAAgBJ,IAAI,CAAC,CAAD,CAApB;;cALgB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMtB,CAdM;IAeDK,UAfC,sBAeUC,EAfV,EAecC,SAfd,EAeyB;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACNtB,QAAQ,CAC7BW,IADqB,CAChB,OADgB,cAGrBY,KAHqB,CAGf;kBAAEF,EAAE,EAAFA;gBAAF,CAHe,CADM;;cAAA;gBAAA;gBACtBH,KADsB,0BACtBA,KADsB;;gBAAA,KAK1BA,KAL0B;kBAAA;kBAAA;gBAAA;;gBAAA,MAKbA,KALa;;cAAA;gBAM9B,MAAI,CAAChB,KAAL,CAAWsB,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B;;cAN8B;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAO/B,CAtBM;IAuBPG,WAvBO,uBAuBKC,MAvBL,EAuBa;MAClB,OAAO,KAAKxB,KAAL,CAAWyB,IAAX,CAAgB,UAACrB,IAAD;QAAA,OAAUA,IAAI,CAACe,EAAL,KAAYO,QAAQ,CAACF,MAAD,EAAS,EAAT,CAA9B;MAAA,CAAhB,CAAP;IACD;EAzBM;AAZyB,CAAV,CAA1B"},"metadata":{},"sourceType":"module"}