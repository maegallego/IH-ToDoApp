{"ast":null,"code":"import { mapState, mapActions } from 'pinia';\nimport taskStore from '@/store/task';\nimport userStore from '@/store/user';\nexport default {\n  name: 'AuthView.vue',\n\n  data() {\n    return {\n      titleTask: '',\n      priority: 'Low',\n      description: '',\n      completed: false,\n      errorMessage: '',\n      is_complete: false\n    };\n  },\n\n  computed: { ...mapState(taskStore, ['tasks']),\n    ...mapState(userStore, ['user'])\n  },\n  methods: { ...mapActions(taskStore, ['createTask']),\n\n    async handleNewTask() {\n      const newTask = {\n        title: this.titleTask,\n        user_id: this.user.id,\n        priority: this.priority,\n        description: this.description,\n        is_complete: this.is_complete\n      };\n\n      try {\n        await this.createTask(newTask);\n        this.$router.push({\n          path: '/'\n        });\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA0CA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,cADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,EADN;MAELC,QAAQ,EAAE,KAFL;MAGLC,WAAW,EAAE,EAHR;MAILC,SAAS,EAAE,KAJN;MAKLC,YAAY,EAAE,EALT;MAMLC,WAAW,EAAE;IANR,CAAP;EAQD,CAXY;;EAYbC,QAAQ,EAAE,EACR,GAAGZ,QAAQ,CAACE,SAAD,EAAY,CAAC,OAAD,CAAZ,CADH;IAER,GAAGF,QAAQ,CAACG,SAAD,EAAY,CAAC,MAAD,CAAZ;EAFH,CAZG;EAgBbU,OAAO,EAAE,EACP,GAAGZ,UAAU,CAACC,SAAD,EAAY,CAAC,YAAD,CAAZ,CADN;;IAEP,MAAMY,aAAN,GAAsB;MACpB,MAAMC,OAAM,GAAI;QACdC,KAAK,EAAE,KAAKV,SADE;QAEdW,OAAO,EAAE,KAAKC,IAAL,CAAUC,EAFL;QAGdZ,QAAQ,EAAE,KAAKA,QAHD;QAIdC,WAAW,EAAE,KAAKA,WAJJ;QAKdG,WAAW,EAAE,KAAKA;MALJ,CAAhB;;MAOA,IAAI;QACF,MAAM,KAAKS,UAAL,CAAgBL,OAAhB,CAAN;QACA,KAAKM,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAE;QAAR,CAAlB;MACF,CAHA,CAGE,OAAOC,KAAP,EAAc;QACd,KAAKd,YAAL,GAAoBc,KAAK,CAACC,OAA1B;MACF;IACD;;EAhBM;AAhBI,CAAf","names":["mapState","mapActions","taskStore","userStore","name","data","titleTask","priority","description","completed","errorMessage","is_complete","computed","methods","handleNewTask","newTask","title","user_id","user","id","createTask","$router","push","path","error","message"],"sourceRoot":"","sources":["/Users/maegallego/Desktop/IRONHACK/clonedproject/ToDoApp/to-do-list/src/components/CreateTask.vue"],"sourcesContent":["<template>\n  <div>\n      <form class='align-left'>\n          <div>\n              <label for='titleTask'>Title\n                  <input class='full-width form-input'\n                  name='titleTask'\n                  type='text'\n                  placeholder='Ir a Correos'\n                  v-model='titleTask'\n                  required\n                  />\n              </label>\n          </div>\n          <div>Description\n            <textarea v-model='description'\n            class='full-width form-input' placeholder='Llevar el DNI. Recoger carta.' required>\n            </textarea>\n          </div>\n          <div></div>\n          <div>\n            Select priority:\n            <select v-model='priority'>\n              <option value='Low' selected>Low</option>\n              <option value='Medium'>Medium</option>\n              <option value='High'>High</option>\n              <option value='Urgent'>Urgent</option>\n              required\n            </select>\n          </div>\n          <label for='is_complete'>Task completed\n            <input type='checkbox' id='checkbox' v-model='is_complete' />\n          </label>\n          <button class='transparent-btn bg-purple' @click.prevent='handleNewTask'>Add Task</button>\n      </form>\n    <div v-if=\"errorMessage\">\n        {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'pinia';\nimport taskStore from '@/store/task';\nimport userStore from '@/store/user';\n\nexport default {\n  name: 'AuthView.vue',\n  data() {\n    return {\n      titleTask: '',\n      priority: 'Low',\n      description: '',\n      completed: false,\n      errorMessage: '',\n      is_complete: false,\n    };\n  },\n  computed: {\n    ...mapState(taskStore, ['tasks']),\n    ...mapState(userStore, ['user']),\n  },\n  methods: {\n    ...mapActions(taskStore, ['createTask']),\n    async handleNewTask() {\n      const newTask = {\n        title: this.titleTask,\n        user_id: this.user.id,\n        priority: this.priority,\n        description: this.description,\n        is_complete: this.is_complete,\n      };\n      try {\n        await this.createTask(newTask);\n        this.$router.push({ path: '/' });\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}