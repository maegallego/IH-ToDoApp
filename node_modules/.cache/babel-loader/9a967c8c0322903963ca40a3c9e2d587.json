{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment } from \"vue\";\n\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Already have an account?\", -1\n/* HOISTED */\n);\n\nvar _hoisted_2 = {\n  \"for\": \"email\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Email \");\n\nvar _hoisted_4 = {\n  \"for\": \"password\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_createTextVNode(\"Password \");\n\nvar _hoisted_6 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    \"class\": \"align-left\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers(function () {\n      return $options.handleSignIn && $options.handleSignIn.apply($options, arguments);\n    }, [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    \"class\": \"full-width form-input\",\n    type: \"email\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.email = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.email]])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    \"class\": \"full-width form-input\",\n    placeholder: \"Password\",\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.password = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.password]])])]), _createElementVNode(\"button\", {\n    \"class\": \"transparent-btn bg-purple\",\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.handleSignIn && $options.handleSignIn.apply($options, arguments);\n    })\n  }, \"Sign In\")], 32\n  /* HYDRATE_EVENTS */\n  )]), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.errorMessage), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;8BAEMA,oBAAiC,IAAjC,EAAiC,IAAjC,EAAI,0BAAJ,EAA4B;AAAA;AAA5B;;;EAGe,OAAI;;;+CAAQ;;;EASZ,OAAI;;;+CAAW;;;;;;6DAblCA,oBAwBM,KAxBN,EAwBM,IAxBN,EAwBM,CAvBFC,UAuBE,EAtBFD,oBAqBO,MArBP,EAqBO;IArBD,SAAM,YAqBL;IArBmBE,QAAM;MAAA,OAAUC,yEAAV;IAAA,GAAsB,WAAtB;EAqBzB,CArBP,GACIH,oBAQM,KARN,EAQM,IARN,EAQM,CAPFA,oBAMQ,OANR,cAMQ,6BALJA,oBAIE,OAJF,EAIE;IAJKI,EAAE,EAAC,OAIR;IAJgB,SAAM,uBAItB;IAHFC,IAAI,EAAC,OAGH;IAFFC,WAAW,EAAC,OAEV;;aADOC,cAAKC;;EACZ,CAJF;;EAAA,kBAGSD,cAEL,CANR,CAOE,CARN,GASAP,oBAQM,KARN,EAQM,IARN,EAQM,CAPFA,oBAMQ,OANR,cAMQ,6BALJA,oBAIE,OAJF,EAIE;IAJKI,EAAE,EAAC,UAIR;IAJmB,SAAM,uBAIzB;IAHFE,WAAW,EAAC,UAGV;IAFFD,IAAI,EAAC,UAEH;;aADOE,iBAAQC;;EACf,CAJF;;EAAA,kBAGSD,iBAEL,CANR,CAOE,CARN,GASAP,oBACsC,QADtC,EACsC;IAD9B,SAAM,2BACwB;IAArCS,OAAK;MAAA,OAAEN,yEAAF;IAAA;EAAgC,CADtC,EACsB,SADtB,EAnBJ;;EAAA,CAsBE,CAxBN,GAyBWI,oCAAXG,oBAEM,KAFN,EAEMC,UAFN,EAEMC,iBADGL,kBACH,CAFN,EACqB;EAAA;EADrB","names":["_createElementVNode","_hoisted_1","onSubmit","$options","id","type","placeholder","$data","$event","onClick","_createElementBlock","_hoisted_6","_toDisplayString"],"sourceRoot":"","sources":["/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/src/components/SignIn.vue"],"sourcesContent":["<template>\n  <div>\n      <h1>Already have an account?</h1>\n      <form class='align-left' @submit.prevent='handleSignIn'>\n          <div>\n              <label for='email'>Email\n                  <input id='email' class='full-width form-input'\n                  type='email'\n                  placeholder='Email'\n                  v-model='email'\n                  />\n              </label>\n          </div>\n          <div>\n              <label for='password'>Password\n                  <input id='password' class='full-width form-input'\n                  placeholder='Password'\n                  type='password'\n                  v-model='password'\n                  />\n              </label>\n          </div>\n          <button class='transparent-btn bg-purple'\n          @click=\"handleSignIn\">Sign In</button>\n      </form>\n  </div>\n  <div v-if=\"errorMessage\">\n        {{ errorMessage }}\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'pinia';\nimport userStore from '@/store/user';\n\nexport default {\n  name: 'SignIn',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: '',\n    };\n  },\n  computed: {\n    ...mapState(userStore, ['user']),\n  },\n  methods: {\n    ...mapActions(userStore, ['signIn']),\n    async handleSignIn() {\n      const userData = {\n        email: this.email,\n        password: this.password,\n      };\n      try {\n        await this.signIn(userData.email, userData.password);\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}