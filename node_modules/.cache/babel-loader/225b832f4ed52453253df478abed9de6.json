{"ast":null,"code":"import supabase from '../supabase';\nexport default {\n  data() {\n    return {\n      task: null,\n      titleTask: '',\n      priority: '',\n      description: '',\n      is_complete: null,\n      id: null\n    };\n  },\n\n  async created() {\n    this.id = this.$route.params.taskId;\n    const {\n      data: [currentTask]\n    } = await supabase.from('tasks').select('*').match({\n      id: this.id\n    });\n    this.task = currentTask;\n  },\n\n  methods: {\n    async handleUpdate() {\n      try {\n        if (this.titleTask) this.task.title = this.titleTask;\n        if (this.priority) this.task.priority = this.priority;\n        if (this.description) this.task.description = this.description;\n        if (this.is_complete) this.task.is_complete = this.is_complete;\n        await supabase.from('tasks').update({ ...this.task\n        }).match({\n          id: this.id\n        });\n        this.$router.push({\n          path: `/#${this.task.id}`\n        });\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6DA,OAAOA,QAAP,MAAqB,aAArB;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,IADD;MAELC,SAAS,EAAE,EAFN;MAGLC,QAAQ,EAAE,EAHL;MAILC,WAAW,EAAE,EAJR;MAKLC,WAAW,EAAE,IALR;MAMLC,EAAE,EAAE;IANC,CAAP;EAQD,CAVY;;EAWb,MAAMC,OAAN,GAAgB;IACd,KAAKD,EAAL,GAAU,KAAKE,MAAL,CAAYC,MAAZ,CAAmBC,MAA7B;IACA,MAAM;MACJV,IAAI,EAAE,CAACW,WAAD;IADF,IAEF,MAAMZ,QAAQ,CAACa,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8B,GAA9B,EAAmCC,KAAnC,CAAyC;MAAER,EAAE,EAAE,KAAKA;IAAX,CAAzC,CAFV;IAGA,KAAKL,IAAL,GAAYU,WAAZ;EACD,CAjBY;;EAkBbI,OAAO,EAAE;IACP,MAAMC,YAAN,GAAqB;MACnB,IAAI;QACF,IAAI,KAAKd,SAAT,EAAoB,KAAKD,IAAL,CAAUgB,KAAV,GAAkB,KAAKf,SAAvB;QACpB,IAAI,KAAKC,QAAT,EAAmB,KAAKF,IAAL,CAAUE,QAAV,GAAqB,KAAKA,QAA1B;QACnB,IAAI,KAAKC,WAAT,EAAsB,KAAKH,IAAL,CAAUG,WAAV,GAAwB,KAAKA,WAA7B;QACtB,IAAI,KAAKC,WAAT,EAAsB,KAAKJ,IAAL,CAAUI,WAAV,GAAwB,KAAKA,WAA7B;QACtB,MAAMN,QAAO,CACVa,IADG,CACE,OADF,EAEHM,MAFG,CAEI,EAAE,GAAG,KAAKjB;QAAV,CAFJ,EAGHa,KAHG,CAGG;UAAER,EAAE,EAAE,KAAKA;QAAX,CAHH,CAAN;QAIA,KAAKa,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAG,KAAI,KAAKpB,IAAL,CAAUK,EAAG;QAA1B,CAAlB;MACF,CAVA,CAUE,OAAOgB,KAAP,EAAc;QACd,KAAKC,YAAL,GAAoBD,KAAK,CAACE,OAA1B;MACF;IACD;;EAfM;AAlBI,CAAf","names":["supabase","data","task","titleTask","priority","description","is_complete","id","created","$route","params","taskId","currentTask","from","select","match","methods","handleUpdate","title","update","$router","push","path","error","errorMessage","message"],"sourceRoot":"","sources":["/Users/maegallego/Desktop/IRONHACK/clonedproject/ToDoApp/to-do-list/src/views/EditTask.vue"],"sourcesContent":["<template>\n  <div class='margin'>\n    <div class='addtask-container purple-shadow centered-div'>\n      <h1>Edit your task.</h1>\n      <div v-if='task'>\n        <form class='align-left'>\n          <div>\n            <label for='titleTask'\n              >Title\n              <input\n                class='full-width form-input'\n                name='titleTask'\n                type='text'\n                :placeholder='task.title'\n                v-model='titleTask'\n              />\n            </label>\n          </div>\n          <div>\n            Description\n            <textarea\n              class='full-width form-input'\n              v-model='description'\n              :placeholder='task.description'\n            >\n            </textarea>\n          </div>\n          <div>\n            Select priority:\n            <br />\n            <select v-model='priority'>\n              <option value='Low' selected>Low</option>\n              <option value='Medium'>Medium</option>\n              <option value='High'>High</option>\n              <option value='Urgent'>Urgent</option>\n            </select>\n          </div>\n          <label for='is_complete'\n            >Task completed\n            <input type='checkbox' id='checkbox' v-model='is_complete'\n            true-value=\"true\" false-value=\"false\"/>\n          </label>\n          <div class='two-btn-right'>\n            <router-link class='transparent-btn' to='/'\n            >Cancel</router-link\n            >\n            <button\n              class='transparent-btn bg-purple'\n              @click.prevent='handleUpdate'\n            >\n              Update\n            </button>\n            {{errorMessage}}\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport supabase from '../supabase';\n\nexport default {\n  data() {\n    return {\n      task: null,\n      titleTask: '',\n      priority: '',\n      description: '',\n      is_complete: null,\n      id: null,\n    };\n  },\n  async created() {\n    this.id = this.$route.params.taskId;\n    const {\n      data: [currentTask],\n    } = await supabase.from('tasks').select('*').match({ id: this.id });\n    this.task = currentTask;\n  },\n  methods: {\n    async handleUpdate() {\n      try {\n        if (this.titleTask) this.task.title = this.titleTask;\n        if (this.priority) this.task.priority = this.priority;\n        if (this.description) this.task.description = this.description;\n        if (this.is_complete) this.task.is_complete = this.is_complete;\n        await supabase\n          .from('tasks')\n          .update({ ...this.task })\n          .match({ id: this.id });\n        this.$router.push({ path: `/#${this.task.id}` });\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}