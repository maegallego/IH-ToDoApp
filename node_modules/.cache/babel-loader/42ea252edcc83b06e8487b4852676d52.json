{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"align-left\"\n};\nconst _hoisted_2 = {\n  for: \"titleTask\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Title \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Description \");\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" Select priority: \");\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Low\",\n  selected: \"\"\n}, \"Low\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Medium\"\n}, \"Medium\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"High\"\n}, \"High\", -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Urgent\"\n}, \"Urgent\", -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\" required \");\n\nconst _hoisted_12 = [_hoisted_7, _hoisted_8, _hoisted_9, _hoisted_10, _hoisted_11];\nconst _hoisted_13 = {\n  for: \"is_complete\"\n};\n\nconst _hoisted_14 = /*#__PURE__*/_createTextVNode(\"Task completed \");\n\nconst _hoisted_15 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    class: \"full-width form-input\",\n    name: \"titleTask\",\n    type: \"text\",\n    placeholder: \"Ir a Correos\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.titleTask = $event),\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.titleTask]])])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.description = $event),\n    class: \"full-width form-input\",\n    placeholder: \"Llevar el DNI. Recoger carta.\",\n    required: \"\"\n  }, \"\\n            \", 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.description]])]), _hoisted_5, _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.priority = $event)\n  }, _hoisted_12, 512\n  /* NEED_PATCH */\n  ), [[_vModelSelect, $data.priority]])]), _createElementVNode(\"label\", _hoisted_13, [_hoisted_14, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.is_complete = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelCheckbox, $data.is_complete]])]), _createElementVNode(\"button\", {\n    class: \"transparent-btn bg-purple\",\n    onClick: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleNewTask && $options.handleNewTask(...args), [\"prevent\"]))\n  }, \"Add Task\")]), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _toDisplayString($data.errorMessage), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EAEYA,KAAK,EAAC;;;EAEGC,GAAG,EAAC;;;iDAAY;;iDAUtB;;gCAKLC,oBAAW,KAAX,EAAW,IAAX,EAAW,IAAX,EAAW;AAAA;AAAX;;iDACK;;gCAGDA,oBAAyC,QAAzC,EAAyC;EAAjCC,KAAK,EAAC,KAA2B;EAArBC,QAAQ,EAAR;AAAqB,CAAzC,EAA6B,KAA7B,EAAgC;AAAA;AAAhC;;gCACAF,oBAAsC,QAAtC,EAAsC;EAA9BC,KAAK,EAAC;AAAwB,CAAtC,EAAuB,QAAvB,EAA6B;AAAA;AAA7B;;gCACAD,oBAAkC,QAAlC,EAAkC;EAA1BC,KAAK,EAAC;AAAoB,CAAlC,EAAqB,MAArB,EAAyB;AAAA;AAAzB;;iCACAD,oBAAsC,QAAtC,EAAsC;EAA9BC,KAAK,EAAC;AAAwB,CAAtC,EAAuB,QAAvB,EAA6B;AAAA;AAA7B;;kDAAsC;;qBAHtCE,YACAC,YACAC,YACAC;;EAIGP,GAAG,EAAC;;;kDAAc;;;;;;uBA7BjCQ,oBAqCM,KArCN,EAqCM,IArCN,EAqCM,CApCFP,oBAgCO,MAhCP,cAgCO,CA/BHA,oBAUM,KAVN,EAUM,IAVN,EAUM,CATFA,oBAQQ,OARR,cAQQ,6BAPJA,oBAME,OANF,EAME;IANKF,KAAK,EAAC,uBAMX;IALFU,IAAI,EAAC,WAKH;IAJFC,IAAI,EAAC,MAIH;IAHFC,WAAW,EAAC,cAGV;+DAFOC,kBAASC,OAEhB;IADFC,QAAQ,EAAR;EACE,CANF;;EAAA,kBAISF,kBAGL,CARR,CASE,CAVN,CA+BG,EApBHX,oBAIM,KAJN,EAIM,IAJN,EAIM,6BAHJA,oBAEW,UAFX,EAEW;+DAFQW,oBAAWC,OAEnB;IADXd,KAAK,EAAC,uBACK;IADmBY,WAAW,EAAC,+BAC/B;IAD+DG,QAAQ,EAAR;EAC/D,CAFX,EACmF,gBADnF,EAEA;EAAA;EAFA,GAEA,eAFmBF,kBAEnB,EACI,CAJN,CAoBG,EAfHG,UAeG,EAdHd,oBASM,KATN,EASM,IATN,EASM,6BAPJA,oBAMS,QANT,EAMS;+DANQW,iBAAQC;EAMhB,CANT;;EAAA,oBAAiBD,iBAOb,CATN,CAcG,EAJHX,oBAEQ,OAFR,eAEQ,8BADNA,oBAA6D,OAA7D,EAA6D;IAAtDS,IAAI,EAAC,UAAiD;IAAtCM,EAAE,EAAC,UAAmC;+DAAfJ,oBAAWC;EAAI,CAA7D;;EAAA,sBAA8CD,oBACxC,CAFR,CAIG,EADHX,oBAA0F,QAA1F,EAA0F;IAAlFF,KAAK,EAAC,2BAA4E;IAA/CkB,OAAK,wDAAUC,yDAAV,EAAuB,WAAvB;EAA0C,CAA1F,EAAyE,UAAzE,CACG,CAhCP,CAoCE,EAHON,oCAAXJ,oBAEM,KAFN,EAEMW,WAFN,EAEMC,iBADCR,kBACD,CAFN,EACmB;EAAA;EADnB,sCAGI,CArCN","names":["class","for","_createElementVNode","value","selected","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_createElementBlock","name","type","placeholder","$data","$event","required","_hoisted_5","id","onClick","$options","_hoisted_15","_toDisplayString"],"sourceRoot":"","sources":["/Users/maegallego/Desktop/IRONHACK/clonedproject/ToDoApp/to-do-list/src/components/CreateTask.vue"],"sourcesContent":["<template>\n  <div>\n      <form class='align-left'>\n          <div>\n              <label for='titleTask'>Title\n                  <input class='full-width form-input'\n                  name='titleTask'\n                  type='text'\n                  placeholder='Ir a Correos'\n                  v-model='titleTask'\n                  required\n                  />\n              </label>\n          </div>\n          <div>Description\n            <textarea v-model='description'\n            class='full-width form-input' placeholder='Llevar el DNI. Recoger carta.' required>\n            </textarea>\n          </div>\n          <div></div>\n          <div>\n            Select priority:\n            <select v-model='priority'>\n              <option value='Low' selected>Low</option>\n              <option value='Medium'>Medium</option>\n              <option value='High'>High</option>\n              <option value='Urgent'>Urgent</option>\n              required\n            </select>\n          </div>\n          <label for='is_complete'>Task completed\n            <input type='checkbox' id='checkbox' v-model='is_complete' />\n          </label>\n          <button class='transparent-btn bg-purple' @click.prevent='handleNewTask'>Add Task</button>\n      </form>\n    <div v-if=\"errorMessage\">\n        {{ errorMessage }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'pinia';\nimport taskStore from '@/store/task';\nimport userStore from '@/store/user';\n\nexport default {\n  name: 'AuthView.vue',\n  data() {\n    return {\n      titleTask: '',\n      priority: 'Low',\n      description: '',\n      completed: false,\n      errorMessage: '',\n      is_complete: false,\n    };\n  },\n  computed: {\n    ...mapState(taskStore, ['tasks']),\n    ...mapState(userStore, ['user']),\n  },\n  methods: {\n    ...mapActions(taskStore, ['createTask']),\n    async handleNewTask() {\n      const newTask = {\n        title: this.titleTask,\n        user_id: this.user.id,\n        priority: this.priority,\n        description: this.description,\n        is_complete: this.is_complete,\n      };\n      try {\n        await this.createTask(newTask);\n        this.$router.push({ path: '/' });\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}