{"ast":null,"code":"import { mapState, mapActions } from 'pinia';\nimport userStore from '@/store/user';\nexport default {\n  name: 'SignIn',\n\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n\n  computed: { ...mapState(userStore, ['user'])\n  },\n  methods: { ...mapActions(userStore, ['signIn']),\n\n    async handleSignIn() {\n      const userData = {\n        email: this.email,\n        password: this.password\n      };\n\n      try {\n        await this.signIn(userData.email, userData.password);\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgCA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,QADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,QAAQ,EAAE,EAFL;MAGLC,YAAY,EAAE;IAHT,CAAP;EAKD,CARY;;EASbC,QAAQ,EAAE,EACR,GAAGR,QAAQ,CAACE,SAAD,EAAY,CAAC,MAAD,CAAZ;EADH,CATG;EAYbO,OAAO,EAAE,EACP,GAAGR,UAAU,CAACC,SAAD,EAAY,CAAC,QAAD,CAAZ,CADN;;IAEP,MAAMQ,YAAN,GAAqB;MACnB,MAAMC,QAAO,GAAI;QACfN,KAAK,EAAE,KAAKA,KADG;QAEfC,QAAQ,EAAE,KAAKA;MAFA,CAAjB;;MAIA,IAAI;QACF,MAAM,KAAKM,MAAL,CAAYD,QAAQ,CAACN,KAArB,EAA4BM,QAAQ,CAACL,QAArC,CAAN;MACF,CAFA,CAEE,OAAOO,KAAP,EAAc;QACd,KAAKN,YAAL,GAAoBM,KAAK,CAACC,OAA1B;MACF;IACD;;EAZM;AAZI,CAAf","names":["mapState","mapActions","userStore","name","data","email","password","errorMessage","computed","methods","handleSignIn","userData","signIn","error","message"],"sourceRoot":"","sources":["/Users/maegallego/Desktop/IRONHACK/clonedproject/ToDoApp/to-do-list/src/components/SignIn.vue"],"sourcesContent":["<template>\n  <div>\n      <h1>Already have an account?</h1>\n      <form class='align-left' @submit.prevent='handleSignIn'>\n          <div>\n              <label for='email'>Email\n                  <input id='email' class='full-width form-input'\n                  type='email'\n                  placeholder='Email'\n                  v-model='email'\n                  />\n              </label>\n          </div>\n          <div>\n              <label for='password'>Password\n                  <input id='password' class='full-width form-input'\n                  placeholder='Password'\n                  type='password'\n                  v-model='password'\n                  />\n              </label>\n          </div>\n          <button class='transparent-btn bg-purple'\n          @click=\"handleSignIn\">Sign In</button>\n      </form>\n  </div>\n  <div v-if=\"errorMessage\">\n        {{ errorMessage }}\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'pinia';\nimport userStore from '@/store/user';\n\nexport default {\n  name: 'SignIn',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: '',\n    };\n  },\n  computed: {\n    ...mapState(userStore, ['user']),\n  },\n  methods: {\n    ...mapActions(userStore, ['signIn']),\n    async handleSignIn() {\n      const userData = {\n        email: this.email,\n        password: this.password,\n      };\n      try {\n        await this.signIn(userData.email, userData.password);\n      } catch (error) {\n        this.errorMessage = error.message;\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}