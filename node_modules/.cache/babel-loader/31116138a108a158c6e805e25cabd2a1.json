{"ast":null,"code":"import _objectSpread from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _typeof from \"/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/es.global-this.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.reflect.set.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n\n/*!\n  * pinia v2.0.22\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, onUnmounted, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n/**\r\n * setActivePinia must be called to handle SSR at the top of functions like\r\n * `fetch`, `setup`, `serverPrefetch` and others\r\n */\n\nvar activePinia;\n/**\r\n * Sets or unsets the active pinia. Used in SSR and internally when calling\r\n * actions and getters\r\n *\r\n * @param pinia - Pinia instance\r\n */\n\nvar setActivePinia = function setActivePinia(pinia) {\n  return activePinia = pinia;\n};\n/**\r\n * Get the currently active pinia if there is any.\r\n */\n\n\nvar getActivePinia = function getActivePinia() {\n  return getCurrentInstance() && inject(piniaSymbol) || activePinia;\n};\n\nvar piniaSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia') :\n/* istanbul ignore next */\nSymbol();\n\nfunction isPlainObject( // eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n  return o && _typeof(o) === 'object' && Object.prototype.toString.call(o) === '[object Object]' && typeof o.toJSON !== 'function';\n} // type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n\n/**\r\n * Possible types for SubscriptionCallback\r\n */\n\n\nvar MutationType;\n\n(function (MutationType) {\n  /**\r\n   * Direct mutation of the state:\r\n   *\r\n   * - `store.name = 'new name'`\r\n   * - `store.$state.name = 'new name'`\r\n   * - `store.list.push('new item')`\r\n   */\n  MutationType[\"direct\"] = \"direct\";\n  /**\r\n   * Mutated the state with `$patch` and an object\r\n   *\r\n   * - `store.$patch({ name: 'newName' })`\r\n   */\n\n  MutationType[\"patchObject\"] = \"patch object\";\n  /**\r\n   * Mutated the state with `$patch` and a function\r\n   *\r\n   * - `store.$patch(state => state.name = 'newName')`\r\n   */\n\n  MutationType[\"patchFunction\"] = \"patch function\"; // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\n\nvar IS_CLIENT = typeof window !== 'undefined';\n/**\r\n * Should we add the devtools plugins.\r\n * - only if dev mode or forced through the prod devtools flag\r\n * - not in test\r\n * - only if window exists (could change in the future)\r\n */\n\nvar USE_DEVTOOLS = (process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n/*\r\n * FileSaver.js A saveAs() FileSaver implementation.\r\n *\r\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\r\n * Morote.\r\n *\r\n * License : MIT\r\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\n\nvar _global = /*#__PURE__*/function () {\n  return (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' && window.window === window ? window : (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' && self.self === self ? self : (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) === 'object' && global.global === global ? global : (typeof globalThis === \"undefined\" ? \"undefined\" : _typeof(globalThis)) === 'object' ? globalThis : {\n    HTMLElement: null\n  };\n}();\n\nfunction bom(blob) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$autoBom = _ref.autoBom,\n      autoBom = _ref$autoBom === void 0 ? false : _ref$autoBom;\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xfeff), blob], {\n      type: blob.type\n    });\n  }\n\n  return blob;\n}\n\nfunction download(url, name, opts) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n  xhr.responseType = 'blob';\n\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts);\n  };\n\n  xhr.onerror = function () {\n    console.error('could not download file');\n  };\n\n  xhr.send();\n}\n\nfunction corsEnabled(url) {\n  var xhr = new XMLHttpRequest(); // use sync to avoid popup blocker\n\n  xhr.open('HEAD', url, false);\n\n  try {\n    xhr.send();\n  } catch (e) {}\n\n  return xhr.status >= 200 && xhr.status <= 299;\n} // `a.click()` doesn't work for all browsers (#465)\n\n\nfunction click(node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'));\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents');\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n    node.dispatchEvent(evt);\n  }\n}\n\nvar _navigator = (typeof navigator === \"undefined\" ? \"undefined\" : _typeof(navigator)) === 'object' ? navigator : {\n  userAgent: ''\n}; // Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\n\n\nvar isMacOSWebView = /*#__PURE__*/function () {\n  return /Macintosh/.test(_navigator.userAgent) && /AppleWebKit/.test(_navigator.userAgent) && !/Safari/.test(_navigator.userAgent);\n}();\n\nvar saveAs = !IS_CLIENT ? function () {} // noop\n: // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\ntypeof HTMLAnchorElement !== 'undefined' && 'download' in HTMLAnchorElement.prototype && !isMacOSWebView ? downloadSaveAs : // Use msSaveOrOpenBlob as a second approach\n'msSaveOrOpenBlob' in _navigator ? msSaveAs : // Fallback to using FileReader and a popup\nfileSaverSaveAs;\n\nfunction downloadSaveAs(blob) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'download';\n  var opts = arguments.length > 2 ? arguments[2] : undefined;\n  var a = document.createElement('a');\n  a.download = name;\n  a.rel = 'noopener'; // tabnabbing\n  // TODO: detect chrome extensions & packaged apps\n  // a.target = '_blank'\n\n  if (typeof blob === 'string') {\n    // Support regular links\n    a.href = blob;\n\n    if (a.origin !== location.origin) {\n      if (corsEnabled(a.href)) {\n        download(blob, name, opts);\n      } else {\n        a.target = '_blank';\n        click(a);\n      }\n    } else {\n      click(a);\n    }\n  } else {\n    // Support blobs\n    a.href = URL.createObjectURL(blob);\n    setTimeout(function () {\n      URL.revokeObjectURL(a.href);\n    }, 4e4); // 40s\n\n    setTimeout(function () {\n      click(a);\n    }, 0);\n  }\n}\n\nfunction msSaveAs(blob) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'download';\n  var opts = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (typeof blob === 'string') {\n    if (corsEnabled(blob)) {\n      download(blob, name, opts);\n    } else {\n      var a = document.createElement('a');\n      a.href = blob;\n      a.target = '_blank';\n      setTimeout(function () {\n        click(a);\n      });\n    }\n  } else {\n    // @ts-ignore: works on windows\n    navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n  }\n}\n\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n  // Open a popup immediately do go around popup blocker\n  // Mostly only available on user interaction and the fileReader is async so...\n  popup = popup || open('', '_blank');\n\n  if (popup) {\n    popup.document.title = popup.document.body.innerText = 'downloading...';\n  }\n\n  if (typeof blob === 'string') return download(blob, name, opts);\n  var force = blob.type === 'application/octet-stream';\n\n  var isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n\n  var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n\n  if ((isChromeIOS || force && isSafari || isMacOSWebView) && typeof FileReader !== 'undefined') {\n    // Safari doesn't allow downloading of blob URLs\n    var reader = new FileReader();\n\n    reader.onloadend = function () {\n      var url = reader.result;\n\n      if (typeof url !== 'string') {\n        popup = null;\n        throw new Error('Wrong reader.result type');\n      }\n\n      url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\n      if (popup) {\n        popup.location.href = url;\n      } else {\n        location.assign(url);\n      }\n\n      popup = null; // reverse-tabnabbing #460\n    };\n\n    reader.readAsDataURL(blob);\n  } else {\n    var url = URL.createObjectURL(blob);\n    if (popup) popup.location.assign(url);else location.href = url;\n    popup = null; // reverse-tabnabbing #460\n\n    setTimeout(function () {\n      URL.revokeObjectURL(url);\n    }, 4e4); // 40s\n  }\n}\n/**\r\n * Shows a toast or console.log\r\n *\r\n * @param message - message to log\r\n * @param type - different color of the tooltip\r\n */\n\n\nfunction toastMessage(message, type) {\n  var piniaMessage = '🍍 ' + message;\n\n  if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n    __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n  } else if (type === 'error') {\n    console.error(piniaMessage);\n  } else if (type === 'warn') {\n    console.warn(piniaMessage);\n  } else {\n    console.log(piniaMessage);\n  }\n}\n\nfunction isPinia(o) {\n  return '_a' in o && 'install' in o;\n}\n\nfunction checkClipboardAccess() {\n  if (!('clipboard' in navigator)) {\n    toastMessage(\"Your browser doesn't support the Clipboard API\", 'error');\n    return true;\n  }\n}\n\nfunction checkNotFocusedError(error) {\n  if (error instanceof Error && error.message.toLowerCase().includes('document is not focused')) {\n    toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n    return true;\n  }\n\n  return false;\n}\n\nfunction actionGlobalCopyState(_x) {\n  return _actionGlobalCopyState.apply(this, arguments);\n}\n\nfunction _actionGlobalCopyState() {\n  _actionGlobalCopyState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(pinia) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!checkClipboardAccess()) {\n              _context4.next = 2;\n              break;\n            }\n\n            return _context4.abrupt(\"return\");\n\n          case 2:\n            _context4.prev = 2;\n            _context4.next = 5;\n            return navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n\n          case 5:\n            toastMessage('Global state copied to clipboard.');\n            _context4.next = 14;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](2);\n\n            if (!checkNotFocusedError(_context4.t0)) {\n              _context4.next = 12;\n              break;\n            }\n\n            return _context4.abrupt(\"return\");\n\n          case 12:\n            toastMessage(\"Failed to serialize the state. Check the console for more details.\", 'error');\n            console.error(_context4.t0);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[2, 8]]);\n  }));\n  return _actionGlobalCopyState.apply(this, arguments);\n}\n\nfunction actionGlobalPasteState(_x2) {\n  return _actionGlobalPasteState.apply(this, arguments);\n}\n\nfunction _actionGlobalPasteState() {\n  _actionGlobalPasteState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(pinia) {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!checkClipboardAccess()) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 2:\n            _context5.prev = 2;\n            _context5.t0 = JSON;\n            _context5.next = 6;\n            return navigator.clipboard.readText();\n\n          case 6:\n            _context5.t1 = _context5.sent;\n            pinia.state.value = _context5.t0.parse.call(_context5.t0, _context5.t1);\n            toastMessage('Global state pasted from clipboard.');\n            _context5.next = 17;\n            break;\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t2 = _context5[\"catch\"](2);\n\n            if (!checkNotFocusedError(_context5.t2)) {\n              _context5.next = 15;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 15:\n            toastMessage(\"Failed to deserialize the state from clipboard. Check the console for more details.\", 'error');\n            console.error(_context5.t2);\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 11]]);\n  }));\n  return _actionGlobalPasteState.apply(this, arguments);\n}\n\nfunction actionGlobalSaveState(_x3) {\n  return _actionGlobalSaveState.apply(this, arguments);\n}\n\nfunction _actionGlobalSaveState() {\n  _actionGlobalSaveState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(pinia) {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            try {\n              saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n                type: 'text/plain;charset=utf-8'\n              }), 'pinia-state.json');\n            } catch (error) {\n              toastMessage(\"Failed to export the state as JSON. Check the console for more details.\", 'error');\n              console.error(error);\n            }\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _actionGlobalSaveState.apply(this, arguments);\n}\n\nvar fileInput;\n\nfunction getFileOpener() {\n  if (!fileInput) {\n    fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = '.json';\n  }\n\n  function openFile() {\n    return new Promise(function (resolve, reject) {\n      fileInput.onchange = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var files, file;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                files = fileInput.files;\n\n                if (files) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", resolve(null));\n\n              case 3:\n                file = files.item(0);\n\n                if (file) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", resolve(null));\n\n              case 6:\n                _context.t0 = resolve;\n                _context.next = 9;\n                return file.text();\n\n              case 9:\n                _context.t1 = _context.sent;\n                _context.t2 = file;\n                _context.t3 = {\n                  text: _context.t1,\n                  file: _context.t2\n                };\n                return _context.abrupt(\"return\", (0, _context.t0)(_context.t3));\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })); // @ts-ignore: TODO: changed from 4.3 to 4.4\n\n      fileInput.oncancel = function () {\n        return resolve(null);\n      };\n\n      fileInput.onerror = reject;\n      fileInput.click();\n    });\n  }\n\n  return openFile;\n}\n\nfunction actionGlobalOpenStateFile(_x4) {\n  return _actionGlobalOpenStateFile.apply(this, arguments);\n}\n\nfunction _actionGlobalOpenStateFile() {\n  _actionGlobalOpenStateFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(pinia) {\n    var _open, result, text, file;\n\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return getFileOpener();\n\n          case 3:\n            _open = _context7.sent;\n            _context7.next = 6;\n            return _open();\n\n          case 6:\n            result = _context7.sent;\n\n            if (result) {\n              _context7.next = 9;\n              break;\n            }\n\n            return _context7.abrupt(\"return\");\n\n          case 9:\n            text = result.text, file = result.file;\n            pinia.state.value = JSON.parse(text);\n            toastMessage(\"Global state imported from \\\"\".concat(file.name, \"\\\".\"));\n            _context7.next = 18;\n            break;\n\n          case 14:\n            _context7.prev = 14;\n            _context7.t0 = _context7[\"catch\"](0);\n            toastMessage(\"Failed to export the state as JSON. Check the console for more details.\", 'error');\n            console.error(_context7.t0);\n\n          case 18:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 14]]);\n  }));\n  return _actionGlobalOpenStateFile.apply(this, arguments);\n}\n\nfunction formatDisplay(display) {\n  return {\n    _custom: {\n      display: display\n    }\n  };\n}\n\nvar PINIA_ROOT_LABEL = '🍍 Pinia (root)';\nvar PINIA_ROOT_ID = '_root';\n\nfunction formatStoreForInspectorTree(store) {\n  return isPinia(store) ? {\n    id: PINIA_ROOT_ID,\n    label: PINIA_ROOT_LABEL\n  } : {\n    id: store.$id,\n    label: store.$id\n  };\n}\n\nfunction formatStoreForInspectorState(store) {\n  if (isPinia(store)) {\n    var storeNames = Array.from(store._s.keys());\n    var storeMap = store._s;\n    var _state = {\n      state: storeNames.map(function (storeId) {\n        return {\n          editable: true,\n          key: storeId,\n          value: store.state.value[storeId]\n        };\n      }),\n      getters: storeNames.filter(function (id) {\n        return storeMap.get(id)._getters;\n      }).map(function (id) {\n        var store = storeMap.get(id);\n        return {\n          editable: false,\n          key: id,\n          value: store._getters.reduce(function (getters, key) {\n            getters[key] = store[key];\n            return getters;\n          }, {})\n        };\n      })\n    };\n    return _state;\n  }\n\n  var state = {\n    state: Object.keys(store.$state).map(function (key) {\n      return {\n        editable: true,\n        key: key,\n        value: store.$state[key]\n      };\n    })\n  }; // avoid adding empty getters\n\n  if (store._getters && store._getters.length) {\n    state.getters = store._getters.map(function (getterName) {\n      return {\n        editable: false,\n        key: getterName,\n        value: store[getterName]\n      };\n    });\n  }\n\n  if (store._customProperties.size) {\n    state.customProperties = Array.from(store._customProperties).map(function (key) {\n      return {\n        editable: true,\n        key: key,\n        value: store[key]\n      };\n    });\n  }\n\n  return state;\n}\n\nfunction formatEventData(events) {\n  if (!events) return {};\n\n  if (Array.isArray(events)) {\n    // TODO: handle add and delete for arrays and objects\n    return events.reduce(function (data, event) {\n      data.keys.push(event.key);\n      data.operations.push(event.type);\n      data.oldValue[event.key] = event.oldValue;\n      data.newValue[event.key] = event.newValue;\n      return data;\n    }, {\n      oldValue: {},\n      keys: [],\n      operations: [],\n      newValue: {}\n    });\n  } else {\n    return {\n      operation: formatDisplay(events.type),\n      key: formatDisplay(events.key),\n      oldValue: events.oldValue,\n      newValue: events.newValue\n    };\n  }\n}\n\nfunction formatMutationType(type) {\n  switch (type) {\n    case MutationType.direct:\n      return 'mutation';\n\n    case MutationType.patchFunction:\n      return '$patch';\n\n    case MutationType.patchObject:\n      return '$patch';\n\n    default:\n      return 'unknown';\n  }\n} // timeline can be paused when directly changing the state\n\n\nvar isTimelineActive = true;\nvar componentStateTypes = [];\nvar MUTATIONS_LAYER_ID = 'pinia:mutations';\nvar INSPECTOR_ID = 'pinia';\n/**\r\n * Gets the displayed name of a store in devtools\r\n *\r\n * @param id - id of the store\r\n * @returns a formatted string\r\n */\n\nvar getStoreType = function getStoreType(id) {\n  return '🍍 ' + id;\n};\n/**\r\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\r\n * as soon as it is added to the application.\r\n *\r\n * @param app - Vue application\r\n * @param pinia - pinia instance\r\n */\n\n\nfunction registerPiniaDevtools(app, pinia) {\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia 🍍',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes: componentStateTypes,\n    app: app\n  }, function (api) {\n    if (typeof api.now !== 'function') {\n      toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n    }\n\n    api.addTimelineLayer({\n      id: MUTATIONS_LAYER_ID,\n      label: \"Pinia \\uD83C\\uDF4D\",\n      color: 0xe5df88\n    });\n    api.addInspector({\n      id: INSPECTOR_ID,\n      label: 'Pinia 🍍',\n      icon: 'storage',\n      treeFilterPlaceholder: 'Search stores',\n      actions: [{\n        icon: 'content_copy',\n        action: function action() {\n          actionGlobalCopyState(pinia);\n        },\n        tooltip: 'Serialize and copy the state'\n      }, {\n        icon: 'content_paste',\n        action: function () {\n          var _action = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return actionGlobalPasteState(pinia);\n\n                  case 2:\n                    api.sendInspectorTree(INSPECTOR_ID);\n                    api.sendInspectorState(INSPECTOR_ID);\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          function action() {\n            return _action.apply(this, arguments);\n          }\n\n          return action;\n        }(),\n        tooltip: 'Replace the state with the content of your clipboard'\n      }, {\n        icon: 'save',\n        action: function action() {\n          actionGlobalSaveState(pinia);\n        },\n        tooltip: 'Save the state as a JSON file'\n      }, {\n        icon: 'folder_open',\n        action: function () {\n          var _action2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return actionGlobalOpenStateFile(pinia);\n\n                  case 2:\n                    api.sendInspectorTree(INSPECTOR_ID);\n                    api.sendInspectorState(INSPECTOR_ID);\n\n                  case 4:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          function action() {\n            return _action2.apply(this, arguments);\n          }\n\n          return action;\n        }(),\n        tooltip: 'Import the state from a JSON file'\n      }],\n      nodeActions: [{\n        icon: 'restore',\n        tooltip: 'Reset the state (option store only)',\n        action: function action(nodeId) {\n          var store = pinia._s.get(nodeId);\n\n          if (!store) {\n            toastMessage(\"Cannot reset \\\"\".concat(nodeId, \"\\\" store because it wasn't found.\"), 'warn');\n          } else if (!store._isOptionsAPI) {\n            toastMessage(\"Cannot reset \\\"\".concat(nodeId, \"\\\" store because it's a setup store.\"), 'warn');\n          } else {\n            store.$reset();\n            toastMessage(\"Store \\\"\".concat(nodeId, \"\\\" reset.\"));\n          }\n        }\n      }]\n    });\n    api.on.inspectComponent(function (payload, ctx) {\n      var proxy = payload.componentInstance && payload.componentInstance.proxy;\n\n      if (proxy && proxy._pStores) {\n        var piniaStores = payload.componentInstance.proxy._pStores;\n        Object.values(piniaStores).forEach(function (store) {\n          payload.instanceData.state.push({\n            type: getStoreType(store.$id),\n            key: 'state',\n            editable: true,\n            value: store._isOptionsAPI ? {\n              _custom: {\n                value: toRaw(store.$state),\n                actions: [{\n                  icon: 'restore',\n                  tooltip: 'Reset the state of this store',\n                  action: function action() {\n                    return store.$reset();\n                  }\n                }]\n              }\n            } : // NOTE: workaround to unwrap transferred refs\n            Object.keys(store.$state).reduce(function (state, key) {\n              state[key] = store.$state[key];\n              return state;\n            }, {})\n          });\n\n          if (store._getters && store._getters.length) {\n            payload.instanceData.state.push({\n              type: getStoreType(store.$id),\n              key: 'getters',\n              editable: false,\n              value: store._getters.reduce(function (getters, key) {\n                try {\n                  getters[key] = store[key];\n                } catch (error) {\n                  // @ts-expect-error: we just want to show it in devtools\n                  getters[key] = error;\n                }\n\n                return getters;\n              }, {})\n            });\n          }\n        });\n      }\n    });\n    api.on.getInspectorTree(function (payload) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var stores = [pinia];\n        stores = stores.concat(Array.from(pinia._s.values()));\n        payload.rootNodes = (payload.filter ? stores.filter(function (store) {\n          return '$id' in store ? store.$id.toLowerCase().includes(payload.filter.toLowerCase()) : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase());\n        }) : stores).map(formatStoreForInspectorTree);\n      }\n    });\n    api.on.getInspectorState(function (payload) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n\n        if (!inspectedStore) {\n          // this could be the selected store restored for a different project\n          // so it's better not to say anything here\n          return;\n        }\n\n        if (inspectedStore) {\n          payload.state = formatStoreForInspectorState(inspectedStore);\n        }\n      }\n    });\n    api.on.editInspectorState(function (payload, ctx) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n\n        if (!inspectedStore) {\n          return toastMessage(\"store \\\"\".concat(payload.nodeId, \"\\\" not found\"), 'error');\n        }\n\n        var path = payload.path;\n\n        if (!isPinia(inspectedStore)) {\n          // access only the state\n          if (path.length !== 1 || !inspectedStore._customProperties.has(path[0]) || path[0] in inspectedStore.$state) {\n            path.unshift('$state');\n          }\n        } else {\n          // Root access, we can omit the `.value` because the devtools API does it for us\n          path.unshift('state');\n        }\n\n        isTimelineActive = false;\n        payload.set(inspectedStore, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n    api.on.editComponentState(function (payload) {\n      if (payload.type.startsWith('🍍')) {\n        var storeId = payload.type.replace(/^🍍\\s*/, '');\n\n        var store = pinia._s.get(storeId);\n\n        if (!store) {\n          return toastMessage(\"store \\\"\".concat(storeId, \"\\\" not found\"), 'error');\n        }\n\n        var path = payload.path;\n\n        if (path[0] !== 'state') {\n          return toastMessage(\"Invalid path for store \\\"\".concat(storeId, \"\\\":\\n\").concat(path, \"\\nOnly state can be modified.\"));\n        } // rewrite the first entry to be able to directly set the state as\n        // well as any other path\n\n\n        path[0] = '$state';\n        isTimelineActive = false;\n        payload.set(store, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n  });\n}\n\nfunction addStoreToDevtools(app, store) {\n  if (!componentStateTypes.includes(getStoreType(store.$id))) {\n    componentStateTypes.push(getStoreType(store.$id));\n  }\n\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia 🍍',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes: componentStateTypes,\n    app: app,\n    settings: {\n      logStoreChanges: {\n        label: 'Notify about new/deleted stores',\n        type: 'boolean',\n        defaultValue: true\n      } // useEmojis: {\n      //   label: 'Use emojis in messages ⚡️',\n      //   type: 'boolean',\n      //   defaultValue: true,\n      // },\n\n    }\n  }, function (api) {\n    // gracefully handle errors\n    var now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n    store.$onAction(function (_ref3) {\n      var after = _ref3.after,\n          onError = _ref3.onError,\n          name = _ref3.name,\n          args = _ref3.args;\n      var groupId = runningActionId++;\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: '🛫 ' + name,\n          subtitle: 'start',\n          data: {\n            store: formatDisplay(store.$id),\n            action: formatDisplay(name),\n            args: args\n          },\n          groupId: groupId\n        }\n      });\n      after(function (result) {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            title: '🛬 ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args: args,\n              result: result\n            },\n            groupId: groupId\n          }\n        });\n      });\n      onError(function (error) {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            logType: 'error',\n            title: '💥 ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args: args,\n              error: error\n            },\n            groupId: groupId\n          }\n        });\n      });\n    }, true);\n\n    store._customProperties.forEach(function (name) {\n      watch(function () {\n        return unref(store[name]);\n      }, function (newValue, oldValue) {\n        api.notifyComponentUpdate();\n        api.sendInspectorState(INSPECTOR_ID);\n\n        if (isTimelineActive) {\n          api.addTimelineEvent({\n            layerId: MUTATIONS_LAYER_ID,\n            event: {\n              time: now(),\n              title: 'Change',\n              subtitle: name,\n              data: {\n                newValue: newValue,\n                oldValue: oldValue\n              },\n              groupId: activeAction\n            }\n          });\n        }\n      }, {\n        deep: true\n      });\n    });\n\n    store.$subscribe(function (_ref4, state) {\n      var events = _ref4.events,\n          type = _ref4.type;\n      api.notifyComponentUpdate();\n      api.sendInspectorState(INSPECTOR_ID);\n      if (!isTimelineActive) return; // rootStore.state[store.id] = state\n\n      var eventData = {\n        time: now(),\n        title: formatMutationType(type),\n        data: _objectSpread({\n          store: formatDisplay(store.$id)\n        }, formatEventData(events)),\n        groupId: activeAction\n      }; // reset for the next mutation\n\n      activeAction = undefined;\n\n      if (type === MutationType.patchFunction) {\n        eventData.subtitle = '⤵️';\n      } else if (type === MutationType.patchObject) {\n        eventData.subtitle = '🧩';\n      } else if (events && !Array.isArray(events)) {\n        eventData.subtitle = events.type;\n      }\n\n      if (events) {\n        eventData.data['rawEvent(s)'] = {\n          _custom: {\n            display: 'DebuggerEvent',\n            type: 'object',\n            tooltip: 'raw DebuggerEvent[]',\n            value: events\n          }\n        };\n      }\n\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: eventData\n      });\n    }, {\n      detached: true,\n      flush: 'sync'\n    });\n    var hotUpdate = store._hotUpdate;\n    store._hotUpdate = markRaw(function (newStore) {\n      hotUpdate(newStore);\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: '🔥 ' + store.$id,\n          subtitle: 'HMR update',\n          data: {\n            store: formatDisplay(store.$id),\n            info: formatDisplay(\"HMR update\")\n          }\n        }\n      }); // update the devtools too\n\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n    });\n    var $dispose = store.$dispose;\n\n    store.$dispose = function () {\n      $dispose();\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n      api.getSettings().logStoreChanges && toastMessage(\"Disposed \\\"\".concat(store.$id, \"\\\" store \\uD83D\\uDDD1\"));\n    }; // trigger an update so it can display new registered stores\n\n\n    api.notifyComponentUpdate();\n    api.sendInspectorTree(INSPECTOR_ID);\n    api.sendInspectorState(INSPECTOR_ID);\n    api.getSettings().logStoreChanges && toastMessage(\"\\\"\".concat(store.$id, \"\\\" store installed \\uD83C\\uDD95\"));\n  });\n}\n\nvar runningActionId = 0;\nvar activeAction;\n/**\r\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\r\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\r\n * mutation to the action.\r\n *\r\n * @param store - store to patch\r\n * @param actionNames - list of actionst to patch\r\n */\n\nfunction patchActionForGrouping(store, actionNames) {\n  // original actions of the store as they are given by pinia. We are going to override them\n  var actions = actionNames.reduce(function (storeActions, actionName) {\n    // use toRaw to avoid tracking #541\n    storeActions[actionName] = toRaw(store)[actionName];\n    return storeActions;\n  }, {});\n\n  var _loop = function _loop(actionName) {\n    store[actionName] = function () {\n      // setActivePinia(store._p)\n      // the running action id is incremented in a before action hook\n      var _actionId = runningActionId;\n      var trackedStore = new Proxy(store, {\n        get: function get() {\n          activeAction = _actionId;\n          return Reflect.get.apply(Reflect, arguments);\n        },\n        set: function set() {\n          activeAction = _actionId;\n          return Reflect.set.apply(Reflect, arguments);\n        }\n      });\n      return actions[actionName].apply(trackedStore, arguments);\n    };\n  };\n\n  for (var actionName in actions) {\n    _loop(actionName);\n  }\n}\n/**\r\n * pinia.use(devtoolsPlugin)\r\n */\n\n\nfunction devtoolsPlugin(_ref5) {\n  var app = _ref5.app,\n      store = _ref5.store,\n      options = _ref5.options;\n\n  // HMR module\n  if (store.$id.startsWith('__hot:')) {\n    return;\n  } // detect option api vs setup api\n\n\n  if (options.state) {\n    store._isOptionsAPI = true;\n  } // only wrap actions in option-defined stores as this technique relies on\n  // wrapping the context of the action with a proxy\n\n\n  if (typeof options.state === 'function') {\n    patchActionForGrouping( // @ts-expect-error: can cast the store...\n    store, Object.keys(options.actions));\n    var originalHotUpdate = store._hotUpdate; // Upgrade the HMR to also update the new actions\n\n    toRaw(store)._hotUpdate = function (newStore) {\n      originalHotUpdate.apply(this, arguments);\n      patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions));\n    };\n  }\n\n  addStoreToDevtools(app, // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n  store);\n}\n/**\r\n * Creates a Pinia instance to be used by the application\r\n */\n\n\nfunction createPinia() {\n  var scope = effectScope(true); // NOTE: here we could check the window object for a state and directly set it\n  // if there is anything like it with Vue 3 SSR\n\n  var state = scope.run(function () {\n    return ref({});\n  });\n  var _p = []; // plugins added before calling app.use(pinia)\n\n  var toBeInstalled = [];\n  var pinia = markRaw({\n    install: function install(app) {\n      // this allows calling useStore() outside of a component setup after\n      // installing pinia's plugin\n      setActivePinia(pinia);\n\n      if (!isVue2) {\n        pinia._a = app;\n        app.provide(piniaSymbol, pinia);\n        app.config.globalProperties.$pinia = pinia;\n        /* istanbul ignore else */\n\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(app, pinia);\n        }\n\n        toBeInstalled.forEach(function (plugin) {\n          return _p.push(plugin);\n        });\n        toBeInstalled = [];\n      }\n    },\n    use: function use(plugin) {\n      if (!this._a && !isVue2) {\n        toBeInstalled.push(plugin);\n      } else {\n        _p.push(plugin);\n      }\n\n      return this;\n    },\n    _p: _p,\n    // it's actually undefined here\n    // @ts-expect-error\n    _a: null,\n    _e: scope,\n    _s: new Map(),\n    state: state\n  }); // pinia devtools rely on dev only features so they cannot be forced unless\n  // the dev build of Vue is used. Avoid old browsers like IE11.\n\n  if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\n    pinia.use(devtoolsPlugin);\n  }\n\n  return pinia;\n}\n/**\r\n * Checks if a function is a `StoreDefinition`.\r\n *\r\n * @param fn - object to test\r\n * @returns true if `fn` is a StoreDefinition\r\n */\n\n\nvar isUseStore = function isUseStore(fn) {\n  return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\r\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\r\n * remove any key not existing in `newState` and recursively merge plain\r\n * objects.\r\n *\r\n * @param newState - new state object to be patched\r\n * @param oldState - old state that should be used to patch newState\r\n * @returns - newState\r\n */\n\n\nfunction patchObject(newState, oldState) {\n  // no need to go through symbols because they cannot be serialized anyway\n  for (var key in oldState) {\n    var subPatch = oldState[key]; // skip the whole sub tree\n\n    if (!(key in newState)) {\n      continue;\n    }\n\n    var targetValue = newState[key];\n\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && !isRef(subPatch) && !isReactive(subPatch)) {\n      newState[key] = patchObject(targetValue, subPatch);\n    } else {\n      // objects are either a bit more complex (e.g. refs) or primitives, so we\n      // just set the whole thing\n      if (isVue2) {\n        set(newState, key, subPatch);\n      } else {\n        newState[key] = subPatch;\n      }\n    }\n  }\n\n  return newState;\n}\n/**\r\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\r\n *\r\n * @example\r\n * ```js\r\n * const useUser = defineStore(...)\r\n * if (import.meta.hot) {\r\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\r\n * }\r\n * ```\r\n *\r\n * @param initialUseStore - return of the defineStore to hot update\r\n * @param hot - `import.meta.hot`\r\n */\n\n\nfunction acceptHMRUpdate(initialUseStore, hot) {\n  // strip as much as possible from iife.prod\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return function () {};\n  }\n\n  return function (newModule) {\n    var pinia = hot.data.pinia || initialUseStore._pinia;\n\n    if (!pinia) {\n      // this store is still not used\n      return;\n    } // preserve the pinia instance across loads\n\n\n    hot.data.pinia = pinia; // console.log('got data', newStore)\n\n    for (var exportName in newModule) {\n      var useStore = newModule[exportName]; // console.log('checking for', exportName)\n\n      if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n        // console.log('Accepting update for', useStore.$id)\n        var id = useStore.$id;\n\n        if (id !== initialUseStore.$id) {\n          console.warn(\"The id of the store changed from \\\"\".concat(initialUseStore.$id, \"\\\" to \\\"\").concat(id, \"\\\". Reloading.\")); // return import.meta.hot.invalidate()\n\n          return hot.invalidate();\n        }\n\n        var existingStore = pinia._s.get(id);\n\n        if (!existingStore) {\n          console.log(\"[Pinia]: skipping hmr because store doesn't exist yet\");\n          return;\n        }\n\n        useStore(pinia, existingStore);\n      }\n    }\n  };\n}\n\nvar noop = function noop() {};\n\nfunction addSubscription(subscriptions, callback, detached) {\n  var onCleanup = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n  subscriptions.push(callback);\n\n  var removeSubscription = function removeSubscription() {\n    var idx = subscriptions.indexOf(callback);\n\n    if (idx > -1) {\n      subscriptions.splice(idx, 1);\n      onCleanup();\n    }\n  };\n\n  if (!detached && getCurrentInstance()) {\n    onUnmounted(removeSubscription);\n  }\n\n  return removeSubscription;\n}\n\nfunction triggerSubscriptions(subscriptions) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  subscriptions.slice().forEach(function (callback) {\n    callback.apply(void 0, args);\n  });\n}\n\nfunction mergeReactiveObjects(target, patchToApply) {\n  // Handle Map instances\n  if (target instanceof Map && patchToApply instanceof Map) {\n    patchToApply.forEach(function (value, key) {\n      return target.set(key, value);\n    });\n  } // Handle Set instances\n\n\n  if (target instanceof Set && patchToApply instanceof Set) {\n    patchToApply.forEach(target.add, target);\n  } // no need to go through symbols because they cannot be serialized anyway\n\n\n  for (var key in patchToApply) {\n    if (!patchToApply.hasOwnProperty(key)) continue;\n    var subPatch = patchToApply[key];\n    var targetValue = target[key];\n\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && target.hasOwnProperty(key) && !isRef(subPatch) && !isReactive(subPatch)) {\n      // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n      // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n      // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n      target[key] = mergeReactiveObjects(targetValue, subPatch);\n    } else {\n      // @ts-expect-error: subPatch is a valid value\n      target[key] = subPatch;\n    }\n  }\n\n  return target;\n}\n\nvar skipHydrateSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia:skipHydration') :\n/* istanbul ignore next */\nSymbol();\nvar skipHydrateMap = /*#__PURE__*/new WeakMap();\n/**\r\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\r\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\r\n *\r\n * @param obj - target object\r\n * @returns obj\r\n */\n\nfunction skipHydrate(obj) {\n  return isVue2 ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n\n  /* istanbul ignore next */\n  skipHydrateMap.set(obj, 1) && obj : Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n\nfunction shouldHydrate(obj) {\n  return isVue2 ?\n  /* istanbul ignore next */\n  !skipHydrateMap.has(obj) : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\n\nvar assign = Object.assign;\n\nfunction isComputed(o) {\n  return !!(isRef(o) && o.effect);\n}\n\nfunction createOptionsStore(id, options, pinia, hot) {\n  var state = options.state,\n      actions = options.actions,\n      getters = options.getters;\n  var initialState = pinia.state.value[id];\n  var store;\n\n  function setup() {\n    if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n      /* istanbul ignore if */\n      if (isVue2) {\n        set(pinia.state.value, id, state ? state() : {});\n      } else {\n        pinia.state.value[id] = state ? state() : {};\n      }\n    } // avoid creating a state in pinia.state.value\n\n\n    var localState = process.env.NODE_ENV !== 'production' && hot ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\n    toRefs(ref(state ? state() : {}).value) : toRefs(pinia.state.value[id]);\n    return assign(localState, actions, Object.keys(getters || {}).reduce(function (computedGetters, name) {\n      if (process.env.NODE_ENV !== 'production' && name in localState) {\n        console.warn(\"[\\uD83C\\uDF4D]: A getter cannot have the same name as another state property. Rename one of them. Found with \\\"\".concat(name, \"\\\" in store \\\"\").concat(id, \"\\\".\"));\n      }\n\n      computedGetters[name] = markRaw(computed(function () {\n        setActivePinia(pinia); // it was created just before\n\n        var store = pinia._s.get(id); // allow cross using stores\n\n        /* istanbul ignore next */\n\n\n        if (isVue2 && !store._r) return; // @ts-expect-error\n        // return getters![name].call(context, context)\n        // TODO: avoid reading the getter while assigning with a global variable\n\n        return getters[name].call(store, store);\n      }));\n      return computedGetters;\n    }, {}));\n  }\n\n  store = createSetupStore(id, setup, options, pinia, hot, true);\n\n  store.$reset = function $reset() {\n    var newState = state ? state() : {}; // we use a patch to group all changes into one single subscription\n\n    this.$patch(function ($state) {\n      assign($state, newState);\n    });\n  };\n\n  return store;\n}\n\nfunction createSetupStore($id, setup) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var pinia = arguments.length > 3 ? arguments[3] : undefined;\n  var hot = arguments.length > 4 ? arguments[4] : undefined;\n  var isOptionsStore = arguments.length > 5 ? arguments[5] : undefined;\n  var scope;\n  var optionsForPlugin = assign({\n    actions: {}\n  }, options);\n  /* istanbul ignore if */\n  // @ts-expect-error: active is an internal property\n\n  if (process.env.NODE_ENV !== 'production' && !pinia._e.active) {\n    throw new Error('Pinia destroyed');\n  } // watcher options for $subscribe\n\n\n  var $subscribeOptions = {\n    deep: true // flush: 'post',\n\n  };\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== 'production' && !isVue2) {\n    $subscribeOptions.onTrigger = function (event) {\n      /* istanbul ignore else */\n      if (isListening) {\n        debuggerEvents = event; // avoid triggering this while the store is being built and the state is being set in pinia\n      } else if (isListening == false && !store._hotUpdating) {\n        // let patch send all the events together later\n\n        /* istanbul ignore else */\n        if (Array.isArray(debuggerEvents)) {\n          debuggerEvents.push(event);\n        } else {\n          console.error('🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n        }\n      }\n    };\n  } // internal state\n\n\n  var isListening; // set to true at the end\n\n  var isSyncListening; // set to true at the end\n\n  var subscriptions = markRaw([]);\n  var actionSubscriptions = markRaw([]);\n  var debuggerEvents;\n  var initialState = pinia.state.value[$id]; // avoid setting the state for option stores if it is set\n  // by the setup\n\n  if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n    /* istanbul ignore if */\n    if (isVue2) {\n      set(pinia.state.value, $id, {});\n    } else {\n      pinia.state.value[$id] = {};\n    }\n  }\n\n  var hotState = ref({}); // avoid triggering too many listeners\n  // https://github.com/vuejs/pinia/issues/1129\n\n  var activeListener;\n\n  function $patch(partialStateOrMutator) {\n    var subscriptionMutation;\n    isListening = isSyncListening = false; // reset the debugger events since patches are sync\n\n    /* istanbul ignore else */\n\n    if (process.env.NODE_ENV !== 'production') {\n      debuggerEvents = [];\n    }\n\n    if (typeof partialStateOrMutator === 'function') {\n      partialStateOrMutator(pinia.state.value[$id]);\n      subscriptionMutation = {\n        type: MutationType.patchFunction,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    } else {\n      mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n      subscriptionMutation = {\n        type: MutationType.patchObject,\n        payload: partialStateOrMutator,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    }\n\n    var myListenerId = activeListener = Symbol();\n    nextTick().then(function () {\n      if (activeListener === myListenerId) {\n        isListening = true;\n      }\n    });\n    isSyncListening = true; // because we paused the watcher, we need to manually call the subscriptions\n\n    triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n  }\n  /* istanbul ignore next */\n\n\n  var $reset = process.env.NODE_ENV !== 'production' ? function () {\n    throw new Error(\"\\uD83C\\uDF4D: Store \\\"\".concat($id, \"\\\" is built using the setup syntax and does not implement $reset().\"));\n  } : noop;\n\n  function $dispose() {\n    scope.stop();\n    subscriptions = [];\n    actionSubscriptions = [];\n\n    pinia._s[\"delete\"]($id);\n  }\n  /**\r\n   * Wraps an action to handle subscriptions.\r\n   *\r\n   * @param name - name of the action\r\n   * @param action - action to wrap\r\n   * @returns a wrapped action to handle subscriptions\r\n   */\n\n\n  function wrapAction(name, action) {\n    return function () {\n      setActivePinia(pinia);\n      var args = Array.from(arguments);\n      var afterCallbackList = [];\n      var onErrorCallbackList = [];\n\n      function after(callback) {\n        afterCallbackList.push(callback);\n      }\n\n      function onError(callback) {\n        onErrorCallbackList.push(callback);\n      } // @ts-expect-error\n\n\n      triggerSubscriptions(actionSubscriptions, {\n        args: args,\n        name: name,\n        store: store,\n        after: after,\n        onError: onError\n      });\n      var ret;\n\n      try {\n        ret = action.apply(this && this.$id === $id ? this : store, args); // handle sync errors\n      } catch (error) {\n        triggerSubscriptions(onErrorCallbackList, error);\n        throw error;\n      }\n\n      if (ret instanceof Promise) {\n        return ret.then(function (value) {\n          triggerSubscriptions(afterCallbackList, value);\n          return value;\n        })[\"catch\"](function (error) {\n          triggerSubscriptions(onErrorCallbackList, error);\n          return Promise.reject(error);\n        });\n      } // allow the afterCallback to override the return value\n\n\n      triggerSubscriptions(afterCallbackList, ret);\n      return ret;\n    };\n  }\n\n  var _hmrPayload = /*#__PURE__*/markRaw({\n    actions: {},\n    getters: {},\n    state: [],\n    hotState: hotState\n  });\n\n  var partialStore = {\n    _p: pinia,\n    // _s: scope,\n    $id: $id,\n    $onAction: addSubscription.bind(null, actionSubscriptions),\n    $patch: $patch,\n    $reset: $reset,\n    $subscribe: function $subscribe(callback) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var removeSubscription = addSubscription(subscriptions, callback, options.detached, function () {\n        return stopWatcher();\n      });\n      var stopWatcher = scope.run(function () {\n        return watch(function () {\n          return pinia.state.value[$id];\n        }, function (state) {\n          if (options.flush === 'sync' ? isSyncListening : isListening) {\n            callback({\n              storeId: $id,\n              type: MutationType.direct,\n              events: debuggerEvents\n            }, state);\n          }\n        }, assign({}, $subscribeOptions, options));\n      });\n      return removeSubscription;\n    },\n    $dispose: $dispose\n  };\n  /* istanbul ignore if */\n\n  if (isVue2) {\n    // start as non ready\n    partialStore._r = false;\n  }\n\n  var store = reactive(assign(process.env.NODE_ENV !== 'production' && IS_CLIENT ? // devtools custom properties\n  {\n    _customProperties: markRaw(new Set()),\n    _hmrPayload: _hmrPayload\n  } : {}, partialStore // must be added later\n  // setupStore\n  )); // store the partial store now so the setup of stores can instantiate each other before they are finished without\n  // creating infinite loops.\n\n  pinia._s.set($id, store); // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n\n\n  var setupStore = pinia._e.run(function () {\n    scope = effectScope();\n    return scope.run(function () {\n      return setup();\n    });\n  }); // overwrite existing actions to support $onAction\n\n\n  for (var key in setupStore) {\n    var prop = setupStore[key];\n\n    if (isRef(prop) && !isComputed(prop) || isReactive(prop)) {\n      // mark it as a piece of state to be serialized\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        set(hotState.value, key, toRef(setupStore, key)); // createOptionStore directly sets the state in pinia.state.value so we\n        // can just skip that\n      } else if (!isOptionsStore) {\n        // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n        if (initialState && shouldHydrate(prop)) {\n          if (isRef(prop)) {\n            prop.value = initialState[key];\n          } else {\n            // probably a reactive object, lets recursively assign\n            mergeReactiveObjects(prop, initialState[key]);\n          }\n        } // transfer the ref to the pinia state to keep everything in sync\n\n        /* istanbul ignore if */\n\n\n        if (isVue2) {\n          set(pinia.state.value[$id], key, prop);\n        } else {\n          pinia.state.value[$id][key] = prop;\n        }\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.state.push(key);\n      } // action\n\n    } else if (typeof prop === 'function') {\n      // @ts-expect-error: we are overriding the function we avoid wrapping if\n      var actionValue = process.env.NODE_ENV !== 'production' && hot ? prop : wrapAction(key, prop); // this a hot module replacement store because the hotUpdate method needs\n      // to do it with the right context\n\n      /* istanbul ignore if */\n\n      if (isVue2) {\n        set(setupStore, key, actionValue);\n      } else {\n        // @ts-expect-error\n        setupStore[key] = actionValue;\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.actions[key] = prop;\n      } // list actions so they can be used in plugins\n      // @ts-expect-error\n\n\n      optionsForPlugin.actions[key] = prop;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // add getters for devtools\n      if (isComputed(prop)) {\n        _hmrPayload.getters[key] = isOptionsStore ? // @ts-expect-error\n        options.getters[key] : prop;\n\n        if (IS_CLIENT) {\n          var getters = // @ts-expect-error: it should be on the store\n          setupStore._getters || (setupStore._getters = markRaw([]));\n          getters.push(key);\n        }\n      }\n    }\n  } // add the state, getters, and action properties\n\n  /* istanbul ignore if */\n\n\n  if (isVue2) {\n    Object.keys(setupStore).forEach(function (key) {\n      set(store, key, // @ts-expect-error: valid key indexing\n      setupStore[key]);\n    });\n  } else {\n    assign(store, setupStore); // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n    // Make `storeToRefs()` work with `reactive()` #799\n\n    assign(toRaw(store), setupStore);\n  } // use this instead of a computed with setter to be able to create it anywhere\n  // without linking the computed lifespan to wherever the store is first\n  // created.\n\n\n  Object.defineProperty(store, '$state', {\n    get: function get() {\n      return process.env.NODE_ENV !== 'production' && hot ? hotState.value : pinia.state.value[$id];\n    },\n    set: function set(state) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        throw new Error('cannot set hotState');\n      }\n\n      $patch(function ($state) {\n        assign($state, state);\n      });\n    }\n  }); // add the hotUpdate before plugins to allow them to override it\n\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== 'production') {\n    store._hotUpdate = markRaw(function (newStore) {\n      store._hotUpdating = true;\n\n      newStore._hmrPayload.state.forEach(function (stateKey) {\n        if (stateKey in store.$state) {\n          var newStateTarget = newStore.$state[stateKey];\n          var oldStateSource = store.$state[stateKey];\n\n          if (_typeof(newStateTarget) === 'object' && isPlainObject(newStateTarget) && isPlainObject(oldStateSource)) {\n            patchObject(newStateTarget, oldStateSource);\n          } else {\n            // transfer the ref\n            newStore.$state[stateKey] = oldStateSource;\n          }\n        } // patch direct access properties to allow store.stateProperty to work as\n        // store.$state.stateProperty\n\n\n        set(store, stateKey, toRef(newStore.$state, stateKey));\n      }); // remove deleted state properties\n\n\n      Object.keys(store.$state).forEach(function (stateKey) {\n        if (!(stateKey in newStore.$state)) {\n          del(store, stateKey);\n        }\n      }); // avoid devtools logging this as a mutation\n\n      isListening = false;\n      isSyncListening = false;\n      pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n      isSyncListening = true;\n      nextTick().then(function () {\n        isListening = true;\n      });\n\n      for (var actionName in newStore._hmrPayload.actions) {\n        var action = newStore[actionName];\n        set(store, actionName, wrapAction(actionName, action));\n      } // TODO: does this work in both setup and option store?\n\n\n      var _loop2 = function _loop2(getterName) {\n        var getter = newStore._hmrPayload.getters[getterName];\n        var getterValue = isOptionsStore ? // special handling of options api\n        computed(function () {\n          setActivePinia(pinia);\n          return getter.call(store, store);\n        }) : getter;\n        set(store, getterName, getterValue);\n      };\n\n      for (var getterName in newStore._hmrPayload.getters) {\n        _loop2(getterName);\n      } // remove deleted getters\n\n\n      Object.keys(store._hmrPayload.getters).forEach(function (key) {\n        if (!(key in newStore._hmrPayload.getters)) {\n          del(store, key);\n        }\n      }); // remove old actions\n\n      Object.keys(store._hmrPayload.actions).forEach(function (key) {\n        if (!(key in newStore._hmrPayload.actions)) {\n          del(store, key);\n        }\n      }); // update the values used in devtools and to allow deleting new properties later on\n\n      store._hmrPayload = newStore._hmrPayload;\n      store._getters = newStore._getters;\n      store._hotUpdating = false;\n    });\n    var nonEnumerable = {\n      writable: true,\n      configurable: true,\n      // avoid warning on devtools trying to display this property\n      enumerable: false\n    };\n\n    if (IS_CLIENT) {\n      ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach(function (p) {\n        Object.defineProperty(store, p, _objectSpread({\n          value: store[p]\n        }, nonEnumerable));\n      });\n    }\n  }\n  /* istanbul ignore if */\n\n\n  if (isVue2) {\n    // mark the store as ready before plugins\n    store._r = true;\n  } // apply all plugins\n\n\n  pinia._p.forEach(function (extender) {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production' && IS_CLIENT) {\n      var extensions = scope.run(function () {\n        return extender({\n          store: store,\n          app: pinia._a,\n          pinia: pinia,\n          options: optionsForPlugin\n        });\n      });\n      Object.keys(extensions || {}).forEach(function (key) {\n        return store._customProperties.add(key);\n      });\n      assign(store, extensions);\n    } else {\n      assign(store, scope.run(function () {\n        return extender({\n          store: store,\n          app: pinia._a,\n          pinia: pinia,\n          options: optionsForPlugin\n        });\n      }));\n    }\n  });\n\n  if (process.env.NODE_ENV !== 'production' && store.$state && _typeof(store.$state) === 'object' && typeof store.$state.constructor === 'function' && !store.$state.constructor.toString().includes('[native code]')) {\n    console.warn(\"[\\uD83C\\uDF4D]: The \\\"state\\\" must be a plain object. It cannot be\\n\" + \"\\tstate: () => new MyClass()\\n\" + \"Found in store \\\"\".concat(store.$id, \"\\\".\"));\n  } // only apply hydrate to option stores with an initial state in pinia\n\n\n  if (initialState && isOptionsStore && options.hydrate) {\n    options.hydrate(store.$state, initialState);\n  }\n\n  isListening = true;\n  isSyncListening = true;\n  return store;\n}\n\nfunction defineStore( // TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n  var id;\n  var options;\n  var isSetupStore = typeof setup === 'function';\n\n  if (typeof idOrOptions === 'string') {\n    id = idOrOptions; // the option store setup will contain the actual options in this case\n\n    options = isSetupStore ? setupOptions : setup;\n  } else {\n    options = idOrOptions;\n    id = idOrOptions.id;\n  }\n\n  function useStore(pinia, hot) {\n    var currentInstance = getCurrentInstance();\n    pinia = // in test mode, ignore the argument provided as we can always retrieve a\n    // pinia instance with getActivePinia()\n    (process.env.NODE_ENV === 'test' && activePinia && activePinia._testing ? null : pinia) || currentInstance && inject(piniaSymbol);\n    if (pinia) setActivePinia(pinia);\n\n    if (process.env.NODE_ENV !== 'production' && !activePinia) {\n      throw new Error(\"[\\uD83C\\uDF4D]: getActivePinia was called with no active Pinia. Did you forget to install pinia?\\n\" + \"\\tconst pinia = createPinia()\\n\" + \"\\tapp.use(pinia)\\n\" + \"This will fail in production.\");\n    }\n\n    pinia = activePinia;\n\n    if (!pinia._s.has(id)) {\n      // creating the store registers it in `pinia._s`\n      if (isSetupStore) {\n        createSetupStore(id, setup, options, pinia);\n      } else {\n        createOptionsStore(id, options, pinia);\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        // @ts-expect-error: not the right inferred type\n        useStore._pinia = pinia;\n      }\n    }\n\n    var store = pinia._s.get(id);\n\n    if (process.env.NODE_ENV !== 'production' && hot) {\n      var hotId = '__hot:' + id;\n      var newStore = isSetupStore ? createSetupStore(hotId, setup, options, pinia, true) : createOptionsStore(hotId, assign({}, options), pinia, true);\n\n      hot._hotUpdate(newStore); // cleanup the state properties and the store from the cache\n\n\n      delete pinia.state.value[hotId];\n\n      pinia._s[\"delete\"](hotId);\n    } // save stores in instances to access them devtools\n\n\n    if (process.env.NODE_ENV !== 'production' && IS_CLIENT && currentInstance && currentInstance.proxy && // avoid adding stores that are just built for hot module replacement\n    !hot) {\n      var vm = currentInstance.proxy;\n      var cache = '_pStores' in vm ? vm._pStores : vm._pStores = {};\n      cache[id] = store;\n    } // StoreGeneric cannot be casted towards Store\n\n\n    return store;\n  }\n\n  useStore.$id = id;\n  return useStore;\n}\n\nvar mapStoreSuffix = 'Store';\n/**\r\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\r\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\r\n * interface if you are using TypeScript.\r\n *\r\n * @param suffix - new suffix\r\n */\n\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n  mapStoreSuffix = suffix;\n}\n/**\r\n * Allows using stores without the composition API (`setup()`) by generating an\r\n * object to be spread in the `computed` field of a component. It accepts a list\r\n * of store definitions.\r\n *\r\n * @example\r\n * ```js\r\n * export default {\r\n *   computed: {\r\n *     // other computed properties\r\n *     ...mapStores(useUserStore, useCartStore)\r\n *   },\r\n *\r\n *   created() {\r\n *     this.userStore // store with id \"user\"\r\n *     this.cartStore // store with id \"cart\"\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * @param stores - list of stores to map to an object\r\n */\n\n\nfunction mapStores() {\n  for (var _len2 = arguments.length, stores = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    stores[_key2] = arguments[_key2];\n  }\n\n  if (process.env.NODE_ENV !== 'production' && Array.isArray(stores[0])) {\n    console.warn(\"[\\uD83C\\uDF4D]: Directly pass all stores to \\\"mapStores()\\\" without putting them in an array:\\n\" + \"Replace\\n\" + \"\\tmapStores([useAuthStore, useCartStore])\\n\" + \"with\\n\" + \"\\tmapStores(useAuthStore, useCartStore)\\n\" + \"This will fail in production if not fixed.\");\n    stores = stores[0];\n  }\n\n  return stores.reduce(function (reduced, useStore) {\n    // @ts-expect-error: $id is added by defineStore\n    reduced[useStore.$id + mapStoreSuffix] = function () {\n      return useStore(this.$pinia);\n    };\n\n    return reduced;\n  }, {});\n}\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\n\n\nfunction mapState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    reduced[key] = function () {\n      return useStore(this.$pinia)[key];\n    };\n\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var store = useStore(this.$pinia);\n      var storeKey = keysOrMapper[key]; // for some reason TS is unable to infer the type of storeKey to be a\n      // function\n\n      return typeof storeKey === 'function' ? storeKey.call(this, store) : store[storeKey];\n    };\n\n    return reduced;\n  }, {});\n}\n/**\r\n * Alias for `mapState()`. You should use `mapState()` instead.\r\n * @deprecated use `mapState()` instead.\r\n */\n\n\nvar mapGetters = mapState;\n/**\r\n * Allows directly using actions from your store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `methods` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\n\nfunction mapActions(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var _useStore;\n\n      return (_useStore = useStore(this.$pinia))[key].apply(_useStore, arguments);\n    };\n\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var _useStore2;\n\n      return (_useStore2 = useStore(this.$pinia))[keysOrMapper[key]].apply(_useStore2, arguments);\n    };\n\n    return reduced;\n  }, {});\n}\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\n\n\nfunction mapWritableState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    // @ts-ignore\n    reduced[key] = {\n      get: function get() {\n        return useStore(this.$pinia)[key];\n      },\n      set: function set(value) {\n        // it's easier to type it here as any\n        return useStore(this.$pinia)[key] = value;\n      }\n    };\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-ignore\n    reduced[key] = {\n      get: function get() {\n        return useStore(this.$pinia)[keysOrMapper[key]];\n      },\n      set: function set(value) {\n        // it's easier to type it here as any\n        return useStore(this.$pinia)[keysOrMapper[key]] = value;\n      }\n    };\n    return reduced;\n  }, {});\n}\n/**\r\n * Creates an object of references with all the state, getters, and plugin-added\r\n * state properties of the store. Similar to `toRefs()` but specifically\r\n * designed for Pinia stores so methods and non reactive properties are\r\n * completely ignored.\r\n *\r\n * @param store - store to extract the refs from\r\n */\n\n\nfunction storeToRefs(store) {\n  // See https://github.com/vuejs/pinia/issues/852\n  // It's easier to just use toRefs() even if it includes more stuff\n  if (isVue2) {\n    // @ts-expect-error: toRefs include methods and others\n    return toRefs(store);\n  } else {\n    store = toRaw(store);\n    var refs = {};\n\n    for (var key in store) {\n      var value = store[key];\n\n      if (isRef(value) || isReactive(value)) {\n        // @ts-expect-error: the key is state or getter\n        refs[key] = // ---\n        toRef(store, key);\n      }\n    }\n\n    return refs;\n  }\n}\n/**\r\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\r\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\r\n * https://pinia.vuejs.org/ssr/nuxt.html.\r\n *\r\n * @example\r\n * ```js\r\n * import Vue from 'vue'\r\n * import { PiniaVuePlugin, createPinia } from 'pinia'\r\n *\r\n * Vue.use(PiniaVuePlugin)\r\n * const pinia = createPinia()\r\n *\r\n * new Vue({\r\n *   el: '#app',\r\n *   // ...\r\n *   pinia,\r\n * })\r\n * ```\r\n *\r\n * @param _Vue - `Vue` imported from 'vue'.\r\n */\n\n\nvar PiniaVuePlugin = function PiniaVuePlugin(_Vue) {\n  // Equivalent of\n  // app.config.globalProperties.$pinia = pinia\n  _Vue.mixin({\n    beforeCreate: function beforeCreate() {\n      var options = this.$options;\n\n      if (options.pinia) {\n        var pinia = options.pinia; // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n\n        /* istanbul ignore else */\n\n        if (!this._provided) {\n          var provideCache = {};\n          Object.defineProperty(this, '_provided', {\n            get: function get() {\n              return provideCache;\n            },\n            set: function set(v) {\n              return Object.assign(provideCache, v);\n            }\n          });\n        }\n\n        this._provided[piniaSymbol] = pinia; // propagate the pinia instance in an SSR friendly way\n        // avoid adding it to nuxt twice\n\n        /* istanbul ignore else */\n\n        if (!this.$pinia) {\n          this.$pinia = pinia;\n        }\n\n        pinia._a = this;\n\n        if (IS_CLIENT) {\n          // this allows calling useStore() outside of a component setup after\n          // installing pinia's plugin\n          setActivePinia(pinia);\n        }\n\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(pinia._a, pinia);\n        }\n      } else if (!this.$pinia && options.parent && options.parent.$pinia) {\n        this.$pinia = options.parent.$pinia;\n      }\n    },\n    destroyed: function destroyed() {\n      delete this._pStores;\n    }\n  });\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };","map":{"version":3,"names":["getCurrentInstance","inject","toRaw","watch","unref","markRaw","effectScope","ref","isVue2","isRef","isReactive","set","onUnmounted","reactive","toRef","del","nextTick","computed","toRefs","setupDevtoolsPlugin","activePinia","setActivePinia","pinia","getActivePinia","piniaSymbol","process","env","NODE_ENV","Symbol","isPlainObject","o","Object","prototype","toString","call","toJSON","MutationType","IS_CLIENT","window","USE_DEVTOOLS","__VUE_PROD_DEVTOOLS__","_global","self","global","globalThis","HTMLElement","bom","blob","autoBom","test","type","Blob","String","fromCharCode","download","url","name","opts","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","onerror","console","error","send","corsEnabled","e","status","click","node","dispatchEvent","MouseEvent","evt","document","createEvent","initMouseEvent","_navigator","navigator","userAgent","isMacOSWebView","HTMLAnchorElement","downloadSaveAs","msSaveAs","fileSaverSaveAs","a","createElement","rel","href","origin","location","target","URL","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","popup","title","body","innerText","force","isSafari","isChromeIOS","FileReader","reader","onloadend","result","Error","replace","assign","readAsDataURL","toastMessage","message","piniaMessage","__VUE_DEVTOOLS_TOAST__","warn","log","isPinia","checkClipboardAccess","checkNotFocusedError","toLowerCase","includes","actionGlobalCopyState","clipboard","writeText","JSON","stringify","state","value","actionGlobalPasteState","readText","parse","actionGlobalSaveState","fileInput","getFileOpener","accept","openFile","Promise","resolve","reject","onchange","files","file","item","text","oncancel","actionGlobalOpenStateFile","formatDisplay","display","_custom","PINIA_ROOT_LABEL","PINIA_ROOT_ID","formatStoreForInspectorTree","store","id","label","$id","formatStoreForInspectorState","storeNames","Array","from","_s","keys","storeMap","map","storeId","editable","key","getters","filter","get","_getters","reduce","$state","length","getterName","_customProperties","size","customProperties","formatEventData","events","isArray","data","event","push","operations","oldValue","newValue","operation","formatMutationType","direct","patchFunction","patchObject","isTimelineActive","componentStateTypes","MUTATIONS_LAYER_ID","INSPECTOR_ID","getStoreType","registerPiniaDevtools","app","logo","packageName","homepage","api","now","addTimelineLayer","color","addInspector","icon","treeFilterPlaceholder","actions","action","tooltip","sendInspectorTree","sendInspectorState","nodeActions","nodeId","_isOptionsAPI","$reset","on","inspectComponent","payload","ctx","proxy","componentInstance","_pStores","piniaStores","values","forEach","instanceData","getInspectorTree","inspectorId","stores","concat","rootNodes","getInspectorState","inspectedStore","editInspectorState","path","has","unshift","editComponentState","startsWith","addStoreToDevtools","settings","logStoreChanges","defaultValue","bind","Date","$onAction","after","onError","args","groupId","runningActionId","addTimelineEvent","layerId","time","subtitle","activeAction","undefined","logType","notifyComponentUpdate","deep","$subscribe","eventData","detached","flush","hotUpdate","_hotUpdate","newStore","info","$dispose","getSettings","patchActionForGrouping","actionNames","storeActions","actionName","_actionId","trackedStore","Proxy","Reflect","apply","arguments","devtoolsPlugin","options","originalHotUpdate","_hmrPayload","createPinia","scope","run","_p","toBeInstalled","install","_a","provide","config","globalProperties","$pinia","plugin","use","_e","Map","isUseStore","fn","newState","oldState","subPatch","targetValue","acceptHMRUpdate","initialUseStore","hot","newModule","_pinia","exportName","useStore","invalidate","existingStore","noop","addSubscription","subscriptions","callback","onCleanup","removeSubscription","idx","indexOf","splice","triggerSubscriptions","slice","mergeReactiveObjects","patchToApply","Set","add","hasOwnProperty","skipHydrateSymbol","skipHydrateMap","WeakMap","skipHydrate","obj","defineProperty","shouldHydrate","isComputed","effect","createOptionsStore","initialState","setup","localState","computedGetters","_r","createSetupStore","$patch","isOptionsStore","optionsForPlugin","active","$subscribeOptions","onTrigger","isListening","debuggerEvents","_hotUpdating","isSyncListening","actionSubscriptions","hotState","activeListener","partialStateOrMutator","subscriptionMutation","myListenerId","then","stop","wrapAction","afterCallbackList","onErrorCallbackList","ret","partialStore","stopWatcher","setupStore","prop","actionValue","stateKey","newStateTarget","oldStateSource","getter","getterValue","nonEnumerable","writable","configurable","enumerable","p","extender","extensions","constructor","hydrate","defineStore","idOrOptions","setupOptions","isSetupStore","currentInstance","_testing","hotId","vm","cache","mapStoreSuffix","setMapStoreSuffix","suffix","mapStores","reduced","mapState","keysOrMapper","storeKey","mapGetters","mapActions","mapWritableState","storeToRefs","refs","PiniaVuePlugin","_Vue","mixin","beforeCreate","$options","_provided","provideCache","v","parent","destroyed"],"sources":["/Users/maegallego/Desktop/IRONHACK/NewRepoTodoapp/node_modules/pinia/dist/pinia.mjs"],"sourcesContent":["/*!\n  * pinia v2.0.22\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, onUnmounted, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\n/**\r\n * setActivePinia must be called to handle SSR at the top of functions like\r\n * `fetch`, `setup`, `serverPrefetch` and others\r\n */\r\nlet activePinia;\r\n/**\r\n * Sets or unsets the active pinia. Used in SSR and internally when calling\r\n * actions and getters\r\n *\r\n * @param pinia - Pinia instance\r\n */\r\nconst setActivePinia = (pinia) => (activePinia = pinia);\r\n/**\r\n * Get the currently active pinia if there is any.\r\n */\r\nconst getActivePinia = () => (getCurrentInstance() && inject(piniaSymbol)) || activePinia;\r\nconst piniaSymbol = ((process.env.NODE_ENV !== 'production') ? Symbol('pinia') : /* istanbul ignore next */ Symbol());\n\nfunction isPlainObject(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no) {\r\n    return (o &&\r\n        typeof o === 'object' &&\r\n        Object.prototype.toString.call(o) === '[object Object]' &&\r\n        typeof o.toJSON !== 'function');\r\n}\r\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\r\n// TODO: can we change these to numbers?\r\n/**\r\n * Possible types for SubscriptionCallback\r\n */\r\nvar MutationType;\r\n(function (MutationType) {\r\n    /**\r\n     * Direct mutation of the state:\r\n     *\r\n     * - `store.name = 'new name'`\r\n     * - `store.$state.name = 'new name'`\r\n     * - `store.list.push('new item')`\r\n     */\r\n    MutationType[\"direct\"] = \"direct\";\r\n    /**\r\n     * Mutated the state with `$patch` and an object\r\n     *\r\n     * - `store.$patch({ name: 'newName' })`\r\n     */\r\n    MutationType[\"patchObject\"] = \"patch object\";\r\n    /**\r\n     * Mutated the state with `$patch` and a function\r\n     *\r\n     * - `store.$patch(state => state.name = 'newName')`\r\n     */\r\n    MutationType[\"patchFunction\"] = \"patch function\";\r\n    // maybe reset? for $state = {} and $reset\r\n})(MutationType || (MutationType = {}));\n\nconst IS_CLIENT = typeof window !== 'undefined';\r\n/**\r\n * Should we add the devtools plugins.\r\n * - only if dev mode or forced through the prod devtools flag\r\n * - not in test\r\n * - only if window exists (could change in the future)\r\n */\r\nconst USE_DEVTOOLS = ((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n\n/*\r\n * FileSaver.js A saveAs() FileSaver implementation.\r\n *\r\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\r\n * Morote.\r\n *\r\n * License : MIT\r\n */\r\n// The one and only way of getting global scope in all environments\r\n// https://stackoverflow.com/q/3277182/1008999\r\nconst _global = /*#__PURE__*/ (() => typeof window === 'object' && window.window === window\r\n    ? window\r\n    : typeof self === 'object' && self.self === self\r\n        ? self\r\n        : typeof global === 'object' && global.global === global\r\n            ? global\r\n            : typeof globalThis === 'object'\r\n                ? globalThis\r\n                : { HTMLElement: null })();\r\nfunction bom(blob, { autoBom = false } = {}) {\r\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\r\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\r\n    if (autoBom &&\r\n        /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\r\n        return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type });\r\n    }\r\n    return blob;\r\n}\r\nfunction download(url, name, opts) {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url);\r\n    xhr.responseType = 'blob';\r\n    xhr.onload = function () {\r\n        saveAs(xhr.response, name, opts);\r\n    };\r\n    xhr.onerror = function () {\r\n        console.error('could not download file');\r\n    };\r\n    xhr.send();\r\n}\r\nfunction corsEnabled(url) {\r\n    const xhr = new XMLHttpRequest();\r\n    // use sync to avoid popup blocker\r\n    xhr.open('HEAD', url, false);\r\n    try {\r\n        xhr.send();\r\n    }\r\n    catch (e) { }\r\n    return xhr.status >= 200 && xhr.status <= 299;\r\n}\r\n// `a.click()` doesn't work for all browsers (#465)\r\nfunction click(node) {\r\n    try {\r\n        node.dispatchEvent(new MouseEvent('click'));\r\n    }\r\n    catch (e) {\r\n        const evt = document.createEvent('MouseEvents');\r\n        evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\r\n        node.dispatchEvent(evt);\r\n    }\r\n}\r\nconst _navigator = \r\n typeof navigator === 'object' ? navigator : { userAgent: '' };\r\n// Detect WebView inside a native macOS app by ruling out all browsers\r\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\r\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\r\nconst isMacOSWebView = /*#__PURE__*/ (() => /Macintosh/.test(_navigator.userAgent) &&\r\n    /AppleWebKit/.test(_navigator.userAgent) &&\r\n    !/Safari/.test(_navigator.userAgent))();\r\nconst saveAs = !IS_CLIENT\r\n    ? () => { } // noop\r\n    : // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\r\n        typeof HTMLAnchorElement !== 'undefined' &&\r\n            'download' in HTMLAnchorElement.prototype &&\r\n            !isMacOSWebView\r\n            ? downloadSaveAs\r\n            : // Use msSaveOrOpenBlob as a second approach\r\n                'msSaveOrOpenBlob' in _navigator\r\n                    ? msSaveAs\r\n                    : // Fallback to using FileReader and a popup\r\n                        fileSaverSaveAs;\r\nfunction downloadSaveAs(blob, name = 'download', opts) {\r\n    const a = document.createElement('a');\r\n    a.download = name;\r\n    a.rel = 'noopener'; // tabnabbing\r\n    // TODO: detect chrome extensions & packaged apps\r\n    // a.target = '_blank'\r\n    if (typeof blob === 'string') {\r\n        // Support regular links\r\n        a.href = blob;\r\n        if (a.origin !== location.origin) {\r\n            if (corsEnabled(a.href)) {\r\n                download(blob, name, opts);\r\n            }\r\n            else {\r\n                a.target = '_blank';\r\n                click(a);\r\n            }\r\n        }\r\n        else {\r\n            click(a);\r\n        }\r\n    }\r\n    else {\r\n        // Support blobs\r\n        a.href = URL.createObjectURL(blob);\r\n        setTimeout(function () {\r\n            URL.revokeObjectURL(a.href);\r\n        }, 4e4); // 40s\r\n        setTimeout(function () {\r\n            click(a);\r\n        }, 0);\r\n    }\r\n}\r\nfunction msSaveAs(blob, name = 'download', opts) {\r\n    if (typeof blob === 'string') {\r\n        if (corsEnabled(blob)) {\r\n            download(blob, name, opts);\r\n        }\r\n        else {\r\n            const a = document.createElement('a');\r\n            a.href = blob;\r\n            a.target = '_blank';\r\n            setTimeout(function () {\r\n                click(a);\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        // @ts-ignore: works on windows\r\n        navigator.msSaveOrOpenBlob(bom(blob, opts), name);\r\n    }\r\n}\r\nfunction fileSaverSaveAs(blob, name, opts, popup) {\r\n    // Open a popup immediately do go around popup blocker\r\n    // Mostly only available on user interaction and the fileReader is async so...\r\n    popup = popup || open('', '_blank');\r\n    if (popup) {\r\n        popup.document.title = popup.document.body.innerText = 'downloading...';\r\n    }\r\n    if (typeof blob === 'string')\r\n        return download(blob, name, opts);\r\n    const force = blob.type === 'application/octet-stream';\r\n    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\r\n    const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\r\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) &&\r\n        typeof FileReader !== 'undefined') {\r\n        // Safari doesn't allow downloading of blob URLs\r\n        const reader = new FileReader();\r\n        reader.onloadend = function () {\r\n            let url = reader.result;\r\n            if (typeof url !== 'string') {\r\n                popup = null;\r\n                throw new Error('Wrong reader.result type');\r\n            }\r\n            url = isChromeIOS\r\n                ? url\r\n                : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\r\n            if (popup) {\r\n                popup.location.href = url;\r\n            }\r\n            else {\r\n                location.assign(url);\r\n            }\r\n            popup = null; // reverse-tabnabbing #460\r\n        };\r\n        reader.readAsDataURL(blob);\r\n    }\r\n    else {\r\n        const url = URL.createObjectURL(blob);\r\n        if (popup)\r\n            popup.location.assign(url);\r\n        else\r\n            location.href = url;\r\n        popup = null; // reverse-tabnabbing #460\r\n        setTimeout(function () {\r\n            URL.revokeObjectURL(url);\r\n        }, 4e4); // 40s\r\n    }\r\n}\n\n/**\r\n * Shows a toast or console.log\r\n *\r\n * @param message - message to log\r\n * @param type - different color of the tooltip\r\n */\r\nfunction toastMessage(message, type) {\r\n    const piniaMessage = '🍍 ' + message;\r\n    if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\r\n        __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\r\n    }\r\n    else if (type === 'error') {\r\n        console.error(piniaMessage);\r\n    }\r\n    else if (type === 'warn') {\r\n        console.warn(piniaMessage);\r\n    }\r\n    else {\r\n        console.log(piniaMessage);\r\n    }\r\n}\r\nfunction isPinia(o) {\r\n    return '_a' in o && 'install' in o;\r\n}\n\nfunction checkClipboardAccess() {\r\n    if (!('clipboard' in navigator)) {\r\n        toastMessage(`Your browser doesn't support the Clipboard API`, 'error');\r\n        return true;\r\n    }\r\n}\r\nfunction checkNotFocusedError(error) {\r\n    if (error instanceof Error &&\r\n        error.message.toLowerCase().includes('document is not focused')) {\r\n        toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nasync function actionGlobalCopyState(pinia) {\r\n    if (checkClipboardAccess())\r\n        return;\r\n    try {\r\n        await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\r\n        toastMessage('Global state copied to clipboard.');\r\n    }\r\n    catch (error) {\r\n        if (checkNotFocusedError(error))\r\n            return;\r\n        toastMessage(`Failed to serialize the state. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nasync function actionGlobalPasteState(pinia) {\r\n    if (checkClipboardAccess())\r\n        return;\r\n    try {\r\n        pinia.state.value = JSON.parse(await navigator.clipboard.readText());\r\n        toastMessage('Global state pasted from clipboard.');\r\n    }\r\n    catch (error) {\r\n        if (checkNotFocusedError(error))\r\n            return;\r\n        toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nasync function actionGlobalSaveState(pinia) {\r\n    try {\r\n        saveAs(new Blob([JSON.stringify(pinia.state.value)], {\r\n            type: 'text/plain;charset=utf-8',\r\n        }), 'pinia-state.json');\r\n    }\r\n    catch (error) {\r\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\r\nlet fileInput;\r\nfunction getFileOpener() {\r\n    if (!fileInput) {\r\n        fileInput = document.createElement('input');\r\n        fileInput.type = 'file';\r\n        fileInput.accept = '.json';\r\n    }\r\n    function openFile() {\r\n        return new Promise((resolve, reject) => {\r\n            fileInput.onchange = async () => {\r\n                const files = fileInput.files;\r\n                if (!files)\r\n                    return resolve(null);\r\n                const file = files.item(0);\r\n                if (!file)\r\n                    return resolve(null);\r\n                return resolve({ text: await file.text(), file });\r\n            };\r\n            // @ts-ignore: TODO: changed from 4.3 to 4.4\r\n            fileInput.oncancel = () => resolve(null);\r\n            fileInput.onerror = reject;\r\n            fileInput.click();\r\n        });\r\n    }\r\n    return openFile;\r\n}\r\nasync function actionGlobalOpenStateFile(pinia) {\r\n    try {\r\n        const open = await getFileOpener();\r\n        const result = await open();\r\n        if (!result)\r\n            return;\r\n        const { text, file } = result;\r\n        pinia.state.value = JSON.parse(text);\r\n        toastMessage(`Global state imported from \"${file.name}\".`);\r\n    }\r\n    catch (error) {\r\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\r\n        console.error(error);\r\n    }\r\n}\n\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\nconst PINIA_ROOT_LABEL = '🍍 Pinia (root)';\r\nconst PINIA_ROOT_ID = '_root';\r\nfunction formatStoreForInspectorTree(store) {\r\n    return isPinia(store)\r\n        ? {\r\n            id: PINIA_ROOT_ID,\r\n            label: PINIA_ROOT_LABEL,\r\n        }\r\n        : {\r\n            id: store.$id,\r\n            label: store.$id,\r\n        };\r\n}\r\nfunction formatStoreForInspectorState(store) {\r\n    if (isPinia(store)) {\r\n        const storeNames = Array.from(store._s.keys());\r\n        const storeMap = store._s;\r\n        const state = {\r\n            state: storeNames.map((storeId) => ({\r\n                editable: true,\r\n                key: storeId,\r\n                value: store.state.value[storeId],\r\n            })),\r\n            getters: storeNames\r\n                .filter((id) => storeMap.get(id)._getters)\r\n                .map((id) => {\r\n                const store = storeMap.get(id);\r\n                return {\r\n                    editable: false,\r\n                    key: id,\r\n                    value: store._getters.reduce((getters, key) => {\r\n                        getters[key] = store[key];\r\n                        return getters;\r\n                    }, {}),\r\n                };\r\n            }),\r\n        };\r\n        return state;\r\n    }\r\n    const state = {\r\n        state: Object.keys(store.$state).map((key) => ({\r\n            editable: true,\r\n            key,\r\n            value: store.$state[key],\r\n        })),\r\n    };\r\n    // avoid adding empty getters\r\n    if (store._getters && store._getters.length) {\r\n        state.getters = store._getters.map((getterName) => ({\r\n            editable: false,\r\n            key: getterName,\r\n            value: store[getterName],\r\n        }));\r\n    }\r\n    if (store._customProperties.size) {\r\n        state.customProperties = Array.from(store._customProperties).map((key) => ({\r\n            editable: true,\r\n            key,\r\n            value: store[key],\r\n        }));\r\n    }\r\n    return state;\r\n}\r\nfunction formatEventData(events) {\r\n    if (!events)\r\n        return {};\r\n    if (Array.isArray(events)) {\r\n        // TODO: handle add and delete for arrays and objects\r\n        return events.reduce((data, event) => {\r\n            data.keys.push(event.key);\r\n            data.operations.push(event.type);\r\n            data.oldValue[event.key] = event.oldValue;\r\n            data.newValue[event.key] = event.newValue;\r\n            return data;\r\n        }, {\r\n            oldValue: {},\r\n            keys: [],\r\n            operations: [],\r\n            newValue: {},\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            operation: formatDisplay(events.type),\r\n            key: formatDisplay(events.key),\r\n            oldValue: events.oldValue,\r\n            newValue: events.newValue,\r\n        };\r\n    }\r\n}\r\nfunction formatMutationType(type) {\r\n    switch (type) {\r\n        case MutationType.direct:\r\n            return 'mutation';\r\n        case MutationType.patchFunction:\r\n            return '$patch';\r\n        case MutationType.patchObject:\r\n            return '$patch';\r\n        default:\r\n            return 'unknown';\r\n    }\r\n}\n\n// timeline can be paused when directly changing the state\r\nlet isTimelineActive = true;\r\nconst componentStateTypes = [];\r\nconst MUTATIONS_LAYER_ID = 'pinia:mutations';\r\nconst INSPECTOR_ID = 'pinia';\r\n/**\r\n * Gets the displayed name of a store in devtools\r\n *\r\n * @param id - id of the store\r\n * @returns a formatted string\r\n */\r\nconst getStoreType = (id) => '🍍 ' + id;\r\n/**\r\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\r\n * as soon as it is added to the application.\r\n *\r\n * @param app - Vue application\r\n * @param pinia - pinia instance\r\n */\r\nfunction registerPiniaDevtools(app, pinia) {\r\n    setupDevtoolsPlugin({\r\n        id: 'dev.esm.pinia',\r\n        label: 'Pinia 🍍',\r\n        logo: 'https://pinia.vuejs.org/logo.svg',\r\n        packageName: 'pinia',\r\n        homepage: 'https://pinia.vuejs.org',\r\n        componentStateTypes,\r\n        app,\r\n    }, (api) => {\r\n        if (typeof api.now !== 'function') {\r\n            toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\r\n        }\r\n        api.addTimelineLayer({\r\n            id: MUTATIONS_LAYER_ID,\r\n            label: `Pinia 🍍`,\r\n            color: 0xe5df88,\r\n        });\r\n        api.addInspector({\r\n            id: INSPECTOR_ID,\r\n            label: 'Pinia 🍍',\r\n            icon: 'storage',\r\n            treeFilterPlaceholder: 'Search stores',\r\n            actions: [\r\n                {\r\n                    icon: 'content_copy',\r\n                    action: () => {\r\n                        actionGlobalCopyState(pinia);\r\n                    },\r\n                    tooltip: 'Serialize and copy the state',\r\n                },\r\n                {\r\n                    icon: 'content_paste',\r\n                    action: async () => {\r\n                        await actionGlobalPasteState(pinia);\r\n                        api.sendInspectorTree(INSPECTOR_ID);\r\n                        api.sendInspectorState(INSPECTOR_ID);\r\n                    },\r\n                    tooltip: 'Replace the state with the content of your clipboard',\r\n                },\r\n                {\r\n                    icon: 'save',\r\n                    action: () => {\r\n                        actionGlobalSaveState(pinia);\r\n                    },\r\n                    tooltip: 'Save the state as a JSON file',\r\n                },\r\n                {\r\n                    icon: 'folder_open',\r\n                    action: async () => {\r\n                        await actionGlobalOpenStateFile(pinia);\r\n                        api.sendInspectorTree(INSPECTOR_ID);\r\n                        api.sendInspectorState(INSPECTOR_ID);\r\n                    },\r\n                    tooltip: 'Import the state from a JSON file',\r\n                },\r\n            ],\r\n            nodeActions: [\r\n                {\r\n                    icon: 'restore',\r\n                    tooltip: 'Reset the state (option store only)',\r\n                    action: (nodeId) => {\r\n                        const store = pinia._s.get(nodeId);\r\n                        if (!store) {\r\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it wasn't found.`, 'warn');\r\n                        }\r\n                        else if (!store._isOptionsAPI) {\r\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it's a setup store.`, 'warn');\r\n                        }\r\n                        else {\r\n                            store.$reset();\r\n                            toastMessage(`Store \"${nodeId}\" reset.`);\r\n                        }\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            const proxy = (payload.componentInstance &&\r\n                payload.componentInstance.proxy);\r\n            if (proxy && proxy._pStores) {\r\n                const piniaStores = payload.componentInstance.proxy._pStores;\r\n                Object.values(piniaStores).forEach((store) => {\r\n                    payload.instanceData.state.push({\r\n                        type: getStoreType(store.$id),\r\n                        key: 'state',\r\n                        editable: true,\r\n                        value: store._isOptionsAPI\r\n                            ? {\r\n                                _custom: {\r\n                                    value: toRaw(store.$state),\r\n                                    actions: [\r\n                                        {\r\n                                            icon: 'restore',\r\n                                            tooltip: 'Reset the state of this store',\r\n                                            action: () => store.$reset(),\r\n                                        },\r\n                                    ],\r\n                                },\r\n                            }\r\n                            : // NOTE: workaround to unwrap transferred refs\r\n                                Object.keys(store.$state).reduce((state, key) => {\r\n                                    state[key] = store.$state[key];\r\n                                    return state;\r\n                                }, {}),\r\n                    });\r\n                    if (store._getters && store._getters.length) {\r\n                        payload.instanceData.state.push({\r\n                            type: getStoreType(store.$id),\r\n                            key: 'getters',\r\n                            editable: false,\r\n                            value: store._getters.reduce((getters, key) => {\r\n                                try {\r\n                                    getters[key] = store[key];\r\n                                }\r\n                                catch (error) {\r\n                                    // @ts-expect-error: we just want to show it in devtools\r\n                                    getters[key] = error;\r\n                                }\r\n                                return getters;\r\n                            }, {}),\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        api.on.getInspectorTree((payload) => {\r\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\r\n                let stores = [pinia];\r\n                stores = stores.concat(Array.from(pinia._s.values()));\r\n                payload.rootNodes = (payload.filter\r\n                    ? stores.filter((store) => '$id' in store\r\n                        ? store.$id\r\n                            .toLowerCase()\r\n                            .includes(payload.filter.toLowerCase())\r\n                        : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase()))\r\n                    : stores).map(formatStoreForInspectorTree);\r\n            }\r\n        });\r\n        api.on.getInspectorState((payload) => {\r\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\r\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\r\n                    ? pinia\r\n                    : pinia._s.get(payload.nodeId);\r\n                if (!inspectedStore) {\r\n                    // this could be the selected store restored for a different project\r\n                    // so it's better not to say anything here\r\n                    return;\r\n                }\r\n                if (inspectedStore) {\r\n                    payload.state = formatStoreForInspectorState(inspectedStore);\r\n                }\r\n            }\r\n        });\r\n        api.on.editInspectorState((payload, ctx) => {\r\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\r\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\r\n                    ? pinia\r\n                    : pinia._s.get(payload.nodeId);\r\n                if (!inspectedStore) {\r\n                    return toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\r\n                }\r\n                const { path } = payload;\r\n                if (!isPinia(inspectedStore)) {\r\n                    // access only the state\r\n                    if (path.length !== 1 ||\r\n                        !inspectedStore._customProperties.has(path[0]) ||\r\n                        path[0] in inspectedStore.$state) {\r\n                        path.unshift('$state');\r\n                    }\r\n                }\r\n                else {\r\n                    // Root access, we can omit the `.value` because the devtools API does it for us\r\n                    path.unshift('state');\r\n                }\r\n                isTimelineActive = false;\r\n                payload.set(inspectedStore, path, payload.state.value);\r\n                isTimelineActive = true;\r\n            }\r\n        });\r\n        api.on.editComponentState((payload) => {\r\n            if (payload.type.startsWith('🍍')) {\r\n                const storeId = payload.type.replace(/^🍍\\s*/, '');\r\n                const store = pinia._s.get(storeId);\r\n                if (!store) {\r\n                    return toastMessage(`store \"${storeId}\" not found`, 'error');\r\n                }\r\n                const { path } = payload;\r\n                if (path[0] !== 'state') {\r\n                    return toastMessage(`Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`);\r\n                }\r\n                // rewrite the first entry to be able to directly set the state as\r\n                // well as any other path\r\n                path[0] = '$state';\r\n                isTimelineActive = false;\r\n                payload.set(store, path, payload.state.value);\r\n                isTimelineActive = true;\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction addStoreToDevtools(app, store) {\r\n    if (!componentStateTypes.includes(getStoreType(store.$id))) {\r\n        componentStateTypes.push(getStoreType(store.$id));\r\n    }\r\n    setupDevtoolsPlugin({\r\n        id: 'dev.esm.pinia',\r\n        label: 'Pinia 🍍',\r\n        logo: 'https://pinia.vuejs.org/logo.svg',\r\n        packageName: 'pinia',\r\n        homepage: 'https://pinia.vuejs.org',\r\n        componentStateTypes,\r\n        app,\r\n        settings: {\r\n            logStoreChanges: {\r\n                label: 'Notify about new/deleted stores',\r\n                type: 'boolean',\r\n                defaultValue: true,\r\n            },\r\n            // useEmojis: {\r\n            //   label: 'Use emojis in messages ⚡️',\r\n            //   type: 'boolean',\r\n            //   defaultValue: true,\r\n            // },\r\n        },\r\n    }, (api) => {\r\n        // gracefully handle errors\r\n        const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\r\n        store.$onAction(({ after, onError, name, args }) => {\r\n            const groupId = runningActionId++;\r\n            api.addTimelineEvent({\r\n                layerId: MUTATIONS_LAYER_ID,\r\n                event: {\r\n                    time: now(),\r\n                    title: '🛫 ' + name,\r\n                    subtitle: 'start',\r\n                    data: {\r\n                        store: formatDisplay(store.$id),\r\n                        action: formatDisplay(name),\r\n                        args,\r\n                    },\r\n                    groupId,\r\n                },\r\n            });\r\n            after((result) => {\r\n                activeAction = undefined;\r\n                api.addTimelineEvent({\r\n                    layerId: MUTATIONS_LAYER_ID,\r\n                    event: {\r\n                        time: now(),\r\n                        title: '🛬 ' + name,\r\n                        subtitle: 'end',\r\n                        data: {\r\n                            store: formatDisplay(store.$id),\r\n                            action: formatDisplay(name),\r\n                            args,\r\n                            result,\r\n                        },\r\n                        groupId,\r\n                    },\r\n                });\r\n            });\r\n            onError((error) => {\r\n                activeAction = undefined;\r\n                api.addTimelineEvent({\r\n                    layerId: MUTATIONS_LAYER_ID,\r\n                    event: {\r\n                        time: now(),\r\n                        logType: 'error',\r\n                        title: '💥 ' + name,\r\n                        subtitle: 'end',\r\n                        data: {\r\n                            store: formatDisplay(store.$id),\r\n                            action: formatDisplay(name),\r\n                            args,\r\n                            error,\r\n                        },\r\n                        groupId,\r\n                    },\r\n                });\r\n            });\r\n        }, true);\r\n        store._customProperties.forEach((name) => {\r\n            watch(() => unref(store[name]), (newValue, oldValue) => {\r\n                api.notifyComponentUpdate();\r\n                api.sendInspectorState(INSPECTOR_ID);\r\n                if (isTimelineActive) {\r\n                    api.addTimelineEvent({\r\n                        layerId: MUTATIONS_LAYER_ID,\r\n                        event: {\r\n                            time: now(),\r\n                            title: 'Change',\r\n                            subtitle: name,\r\n                            data: {\r\n                                newValue,\r\n                                oldValue,\r\n                            },\r\n                            groupId: activeAction,\r\n                        },\r\n                    });\r\n                }\r\n            }, { deep: true });\r\n        });\r\n        store.$subscribe(({ events, type }, state) => {\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorState(INSPECTOR_ID);\r\n            if (!isTimelineActive)\r\n                return;\r\n            // rootStore.state[store.id] = state\r\n            const eventData = {\r\n                time: now(),\r\n                title: formatMutationType(type),\r\n                data: {\r\n                    store: formatDisplay(store.$id),\r\n                    ...formatEventData(events),\r\n                },\r\n                groupId: activeAction,\r\n            };\r\n            // reset for the next mutation\r\n            activeAction = undefined;\r\n            if (type === MutationType.patchFunction) {\r\n                eventData.subtitle = '⤵️';\r\n            }\r\n            else if (type === MutationType.patchObject) {\r\n                eventData.subtitle = '🧩';\r\n            }\r\n            else if (events && !Array.isArray(events)) {\r\n                eventData.subtitle = events.type;\r\n            }\r\n            if (events) {\r\n                eventData.data['rawEvent(s)'] = {\r\n                    _custom: {\r\n                        display: 'DebuggerEvent',\r\n                        type: 'object',\r\n                        tooltip: 'raw DebuggerEvent[]',\r\n                        value: events,\r\n                    },\r\n                };\r\n            }\r\n            api.addTimelineEvent({\r\n                layerId: MUTATIONS_LAYER_ID,\r\n                event: eventData,\r\n            });\r\n        }, { detached: true, flush: 'sync' });\r\n        const hotUpdate = store._hotUpdate;\r\n        store._hotUpdate = markRaw((newStore) => {\r\n            hotUpdate(newStore);\r\n            api.addTimelineEvent({\r\n                layerId: MUTATIONS_LAYER_ID,\r\n                event: {\r\n                    time: now(),\r\n                    title: '🔥 ' + store.$id,\r\n                    subtitle: 'HMR update',\r\n                    data: {\r\n                        store: formatDisplay(store.$id),\r\n                        info: formatDisplay(`HMR update`),\r\n                    },\r\n                },\r\n            });\r\n            // update the devtools too\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(INSPECTOR_ID);\r\n            api.sendInspectorState(INSPECTOR_ID);\r\n        });\r\n        const { $dispose } = store;\r\n        store.$dispose = () => {\r\n            $dispose();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(INSPECTOR_ID);\r\n            api.sendInspectorState(INSPECTOR_ID);\r\n            api.getSettings().logStoreChanges &&\r\n                toastMessage(`Disposed \"${store.$id}\" store 🗑`);\r\n        };\r\n        // trigger an update so it can display new registered stores\r\n        api.notifyComponentUpdate();\r\n        api.sendInspectorTree(INSPECTOR_ID);\r\n        api.sendInspectorState(INSPECTOR_ID);\r\n        api.getSettings().logStoreChanges &&\r\n            toastMessage(`\"${store.$id}\" store installed 🆕`);\r\n    });\r\n}\r\nlet runningActionId = 0;\r\nlet activeAction;\r\n/**\r\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\r\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\r\n * mutation to the action.\r\n *\r\n * @param store - store to patch\r\n * @param actionNames - list of actionst to patch\r\n */\r\nfunction patchActionForGrouping(store, actionNames) {\r\n    // original actions of the store as they are given by pinia. We are going to override them\r\n    const actions = actionNames.reduce((storeActions, actionName) => {\r\n        // use toRaw to avoid tracking #541\r\n        storeActions[actionName] = toRaw(store)[actionName];\r\n        return storeActions;\r\n    }, {});\r\n    for (const actionName in actions) {\r\n        store[actionName] = function () {\r\n            // setActivePinia(store._p)\r\n            // the running action id is incremented in a before action hook\r\n            const _actionId = runningActionId;\r\n            const trackedStore = new Proxy(store, {\r\n                get(...args) {\r\n                    activeAction = _actionId;\r\n                    return Reflect.get(...args);\r\n                },\r\n                set(...args) {\r\n                    activeAction = _actionId;\r\n                    return Reflect.set(...args);\r\n                },\r\n            });\r\n            return actions[actionName].apply(trackedStore, arguments);\r\n        };\r\n    }\r\n}\r\n/**\r\n * pinia.use(devtoolsPlugin)\r\n */\r\nfunction devtoolsPlugin({ app, store, options }) {\r\n    // HMR module\r\n    if (store.$id.startsWith('__hot:')) {\r\n        return;\r\n    }\r\n    // detect option api vs setup api\r\n    if (options.state) {\r\n        store._isOptionsAPI = true;\r\n    }\r\n    // only wrap actions in option-defined stores as this technique relies on\r\n    // wrapping the context of the action with a proxy\r\n    if (typeof options.state === 'function') {\r\n        patchActionForGrouping(\r\n        // @ts-expect-error: can cast the store...\r\n        store, Object.keys(options.actions));\r\n        const originalHotUpdate = store._hotUpdate;\r\n        // Upgrade the HMR to also update the new actions\r\n        toRaw(store)._hotUpdate = function (newStore) {\r\n            originalHotUpdate.apply(this, arguments);\r\n            patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions));\r\n        };\r\n    }\r\n    addStoreToDevtools(app, \r\n    // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\r\n    store);\r\n}\n\n/**\r\n * Creates a Pinia instance to be used by the application\r\n */\r\nfunction createPinia() {\r\n    const scope = effectScope(true);\r\n    // NOTE: here we could check the window object for a state and directly set it\r\n    // if there is anything like it with Vue 3 SSR\r\n    const state = scope.run(() => ref({}));\r\n    let _p = [];\r\n    // plugins added before calling app.use(pinia)\r\n    let toBeInstalled = [];\r\n    const pinia = markRaw({\r\n        install(app) {\r\n            // this allows calling useStore() outside of a component setup after\r\n            // installing pinia's plugin\r\n            setActivePinia(pinia);\r\n            if (!isVue2) {\r\n                pinia._a = app;\r\n                app.provide(piniaSymbol, pinia);\r\n                app.config.globalProperties.$pinia = pinia;\r\n                /* istanbul ignore else */\r\n                if (USE_DEVTOOLS) {\r\n                    registerPiniaDevtools(app, pinia);\r\n                }\r\n                toBeInstalled.forEach((plugin) => _p.push(plugin));\r\n                toBeInstalled = [];\r\n            }\r\n        },\r\n        use(plugin) {\r\n            if (!this._a && !isVue2) {\r\n                toBeInstalled.push(plugin);\r\n            }\r\n            else {\r\n                _p.push(plugin);\r\n            }\r\n            return this;\r\n        },\r\n        _p,\r\n        // it's actually undefined here\r\n        // @ts-expect-error\r\n        _a: null,\r\n        _e: scope,\r\n        _s: new Map(),\r\n        state,\r\n    });\r\n    // pinia devtools rely on dev only features so they cannot be forced unless\r\n    // the dev build of Vue is used. Avoid old browsers like IE11.\r\n    if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\r\n        pinia.use(devtoolsPlugin);\r\n    }\r\n    return pinia;\r\n}\n\n/**\r\n * Checks if a function is a `StoreDefinition`.\r\n *\r\n * @param fn - object to test\r\n * @returns true if `fn` is a StoreDefinition\r\n */\r\nconst isUseStore = (fn) => {\r\n    return typeof fn === 'function' && typeof fn.$id === 'string';\r\n};\r\n/**\r\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\r\n * remove any key not existing in `newState` and recursively merge plain\r\n * objects.\r\n *\r\n * @param newState - new state object to be patched\r\n * @param oldState - old state that should be used to patch newState\r\n * @returns - newState\r\n */\r\nfunction patchObject(newState, oldState) {\r\n    // no need to go through symbols because they cannot be serialized anyway\r\n    for (const key in oldState) {\r\n        const subPatch = oldState[key];\r\n        // skip the whole sub tree\r\n        if (!(key in newState)) {\r\n            continue;\r\n        }\r\n        const targetValue = newState[key];\r\n        if (isPlainObject(targetValue) &&\r\n            isPlainObject(subPatch) &&\r\n            !isRef(subPatch) &&\r\n            !isReactive(subPatch)) {\r\n            newState[key] = patchObject(targetValue, subPatch);\r\n        }\r\n        else {\r\n            // objects are either a bit more complex (e.g. refs) or primitives, so we\r\n            // just set the whole thing\r\n            if (isVue2) {\r\n                set(newState, key, subPatch);\r\n            }\r\n            else {\r\n                newState[key] = subPatch;\r\n            }\r\n        }\r\n    }\r\n    return newState;\r\n}\r\n/**\r\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\r\n *\r\n * @example\r\n * ```js\r\n * const useUser = defineStore(...)\r\n * if (import.meta.hot) {\r\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\r\n * }\r\n * ```\r\n *\r\n * @param initialUseStore - return of the defineStore to hot update\r\n * @param hot - `import.meta.hot`\r\n */\r\nfunction acceptHMRUpdate(initialUseStore, hot) {\r\n    // strip as much as possible from iife.prod\r\n    if (!(process.env.NODE_ENV !== 'production')) {\r\n        return () => { };\r\n    }\r\n    return (newModule) => {\r\n        const pinia = hot.data.pinia || initialUseStore._pinia;\r\n        if (!pinia) {\r\n            // this store is still not used\r\n            return;\r\n        }\r\n        // preserve the pinia instance across loads\r\n        hot.data.pinia = pinia;\r\n        // console.log('got data', newStore)\r\n        for (const exportName in newModule) {\r\n            const useStore = newModule[exportName];\r\n            // console.log('checking for', exportName)\r\n            if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\r\n                // console.log('Accepting update for', useStore.$id)\r\n                const id = useStore.$id;\r\n                if (id !== initialUseStore.$id) {\r\n                    console.warn(`The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`);\r\n                    // return import.meta.hot.invalidate()\r\n                    return hot.invalidate();\r\n                }\r\n                const existingStore = pinia._s.get(id);\r\n                if (!existingStore) {\r\n                    console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);\r\n                    return;\r\n                }\r\n                useStore(pinia, existingStore);\r\n            }\r\n        }\r\n    };\r\n}\n\nconst noop = () => { };\r\nfunction addSubscription(subscriptions, callback, detached, onCleanup = noop) {\r\n    subscriptions.push(callback);\r\n    const removeSubscription = () => {\r\n        const idx = subscriptions.indexOf(callback);\r\n        if (idx > -1) {\r\n            subscriptions.splice(idx, 1);\r\n            onCleanup();\r\n        }\r\n    };\r\n    if (!detached && getCurrentInstance()) {\r\n        onUnmounted(removeSubscription);\r\n    }\r\n    return removeSubscription;\r\n}\r\nfunction triggerSubscriptions(subscriptions, ...args) {\r\n    subscriptions.slice().forEach((callback) => {\r\n        callback(...args);\r\n    });\r\n}\n\nfunction mergeReactiveObjects(target, patchToApply) {\r\n    // Handle Map instances\r\n    if (target instanceof Map && patchToApply instanceof Map) {\r\n        patchToApply.forEach((value, key) => target.set(key, value));\r\n    }\r\n    // Handle Set instances\r\n    if (target instanceof Set && patchToApply instanceof Set) {\r\n        patchToApply.forEach(target.add, target);\r\n    }\r\n    // no need to go through symbols because they cannot be serialized anyway\r\n    for (const key in patchToApply) {\r\n        if (!patchToApply.hasOwnProperty(key))\r\n            continue;\r\n        const subPatch = patchToApply[key];\r\n        const targetValue = target[key];\r\n        if (isPlainObject(targetValue) &&\r\n            isPlainObject(subPatch) &&\r\n            target.hasOwnProperty(key) &&\r\n            !isRef(subPatch) &&\r\n            !isReactive(subPatch)) {\r\n            // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\r\n            // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\r\n            // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\r\n            target[key] = mergeReactiveObjects(targetValue, subPatch);\r\n        }\r\n        else {\r\n            // @ts-expect-error: subPatch is a valid value\r\n            target[key] = subPatch;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nconst skipHydrateSymbol = (process.env.NODE_ENV !== 'production')\r\n    ? Symbol('pinia:skipHydration')\r\n    : /* istanbul ignore next */ Symbol();\r\nconst skipHydrateMap = /*#__PURE__*/ new WeakMap();\r\n/**\r\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\r\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\r\n *\r\n * @param obj - target object\r\n * @returns obj\r\n */\r\nfunction skipHydrate(obj) {\r\n    return isVue2\r\n        ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\r\n            /* istanbul ignore next */ skipHydrateMap.set(obj, 1) && obj\r\n        : Object.defineProperty(obj, skipHydrateSymbol, {});\r\n}\r\nfunction shouldHydrate(obj) {\r\n    return isVue2\r\n        ? /* istanbul ignore next */ !skipHydrateMap.has(obj)\r\n        : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\r\n}\r\nconst { assign } = Object;\r\nfunction isComputed(o) {\r\n    return !!(isRef(o) && o.effect);\r\n}\r\nfunction createOptionsStore(id, options, pinia, hot) {\r\n    const { state, actions, getters } = options;\r\n    const initialState = pinia.state.value[id];\r\n    let store;\r\n    function setup() {\r\n        if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\r\n            /* istanbul ignore if */\r\n            if (isVue2) {\r\n                set(pinia.state.value, id, state ? state() : {});\r\n            }\r\n            else {\r\n                pinia.state.value[id] = state ? state() : {};\r\n            }\r\n        }\r\n        // avoid creating a state in pinia.state.value\r\n        const localState = (process.env.NODE_ENV !== 'production') && hot\r\n            ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\r\n                toRefs(ref(state ? state() : {}).value)\r\n            : toRefs(pinia.state.value[id]);\r\n        return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {\r\n            if ((process.env.NODE_ENV !== 'production') && name in localState) {\r\n                console.warn(`[🍍]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`);\r\n            }\r\n            computedGetters[name] = markRaw(computed(() => {\r\n                setActivePinia(pinia);\r\n                // it was created just before\r\n                const store = pinia._s.get(id);\r\n                // allow cross using stores\r\n                /* istanbul ignore next */\r\n                if (isVue2 && !store._r)\r\n                    return;\r\n                // @ts-expect-error\r\n                // return getters![name].call(context, context)\r\n                // TODO: avoid reading the getter while assigning with a global variable\r\n                return getters[name].call(store, store);\r\n            }));\r\n            return computedGetters;\r\n        }, {}));\r\n    }\r\n    store = createSetupStore(id, setup, options, pinia, hot, true);\r\n    store.$reset = function $reset() {\r\n        const newState = state ? state() : {};\r\n        // we use a patch to group all changes into one single subscription\r\n        this.$patch(($state) => {\r\n            assign($state, newState);\r\n        });\r\n    };\r\n    return store;\r\n}\r\nfunction createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {\r\n    let scope;\r\n    const optionsForPlugin = assign({ actions: {} }, options);\r\n    /* istanbul ignore if */\r\n    // @ts-expect-error: active is an internal property\r\n    if ((process.env.NODE_ENV !== 'production') && !pinia._e.active) {\r\n        throw new Error('Pinia destroyed');\r\n    }\r\n    // watcher options for $subscribe\r\n    const $subscribeOptions = {\r\n        deep: true,\r\n        // flush: 'post',\r\n    };\r\n    /* istanbul ignore else */\r\n    if ((process.env.NODE_ENV !== 'production') && !isVue2) {\r\n        $subscribeOptions.onTrigger = (event) => {\r\n            /* istanbul ignore else */\r\n            if (isListening) {\r\n                debuggerEvents = event;\r\n                // avoid triggering this while the store is being built and the state is being set in pinia\r\n            }\r\n            else if (isListening == false && !store._hotUpdating) {\r\n                // let patch send all the events together later\r\n                /* istanbul ignore else */\r\n                if (Array.isArray(debuggerEvents)) {\r\n                    debuggerEvents.push(event);\r\n                }\r\n                else {\r\n                    console.error('🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.');\r\n                }\r\n            }\r\n        };\r\n    }\r\n    // internal state\r\n    let isListening; // set to true at the end\r\n    let isSyncListening; // set to true at the end\r\n    let subscriptions = markRaw([]);\r\n    let actionSubscriptions = markRaw([]);\r\n    let debuggerEvents;\r\n    const initialState = pinia.state.value[$id];\r\n    // avoid setting the state for option stores if it is set\r\n    // by the setup\r\n    if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\r\n        /* istanbul ignore if */\r\n        if (isVue2) {\r\n            set(pinia.state.value, $id, {});\r\n        }\r\n        else {\r\n            pinia.state.value[$id] = {};\r\n        }\r\n    }\r\n    const hotState = ref({});\r\n    // avoid triggering too many listeners\r\n    // https://github.com/vuejs/pinia/issues/1129\r\n    let activeListener;\r\n    function $patch(partialStateOrMutator) {\r\n        let subscriptionMutation;\r\n        isListening = isSyncListening = false;\r\n        // reset the debugger events since patches are sync\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            debuggerEvents = [];\r\n        }\r\n        if (typeof partialStateOrMutator === 'function') {\r\n            partialStateOrMutator(pinia.state.value[$id]);\r\n            subscriptionMutation = {\r\n                type: MutationType.patchFunction,\r\n                storeId: $id,\r\n                events: debuggerEvents,\r\n            };\r\n        }\r\n        else {\r\n            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\r\n            subscriptionMutation = {\r\n                type: MutationType.patchObject,\r\n                payload: partialStateOrMutator,\r\n                storeId: $id,\r\n                events: debuggerEvents,\r\n            };\r\n        }\r\n        const myListenerId = (activeListener = Symbol());\r\n        nextTick().then(() => {\r\n            if (activeListener === myListenerId) {\r\n                isListening = true;\r\n            }\r\n        });\r\n        isSyncListening = true;\r\n        // because we paused the watcher, we need to manually call the subscriptions\r\n        triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\r\n    }\r\n    /* istanbul ignore next */\r\n    const $reset = (process.env.NODE_ENV !== 'production')\r\n        ? () => {\r\n            throw new Error(`🍍: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`);\r\n        }\r\n        : noop;\r\n    function $dispose() {\r\n        scope.stop();\r\n        subscriptions = [];\r\n        actionSubscriptions = [];\r\n        pinia._s.delete($id);\r\n    }\r\n    /**\r\n     * Wraps an action to handle subscriptions.\r\n     *\r\n     * @param name - name of the action\r\n     * @param action - action to wrap\r\n     * @returns a wrapped action to handle subscriptions\r\n     */\r\n    function wrapAction(name, action) {\r\n        return function () {\r\n            setActivePinia(pinia);\r\n            const args = Array.from(arguments);\r\n            const afterCallbackList = [];\r\n            const onErrorCallbackList = [];\r\n            function after(callback) {\r\n                afterCallbackList.push(callback);\r\n            }\r\n            function onError(callback) {\r\n                onErrorCallbackList.push(callback);\r\n            }\r\n            // @ts-expect-error\r\n            triggerSubscriptions(actionSubscriptions, {\r\n                args,\r\n                name,\r\n                store,\r\n                after,\r\n                onError,\r\n            });\r\n            let ret;\r\n            try {\r\n                ret = action.apply(this && this.$id === $id ? this : store, args);\r\n                // handle sync errors\r\n            }\r\n            catch (error) {\r\n                triggerSubscriptions(onErrorCallbackList, error);\r\n                throw error;\r\n            }\r\n            if (ret instanceof Promise) {\r\n                return ret\r\n                    .then((value) => {\r\n                    triggerSubscriptions(afterCallbackList, value);\r\n                    return value;\r\n                })\r\n                    .catch((error) => {\r\n                    triggerSubscriptions(onErrorCallbackList, error);\r\n                    return Promise.reject(error);\r\n                });\r\n            }\r\n            // allow the afterCallback to override the return value\r\n            triggerSubscriptions(afterCallbackList, ret);\r\n            return ret;\r\n        };\r\n    }\r\n    const _hmrPayload = /*#__PURE__*/ markRaw({\r\n        actions: {},\r\n        getters: {},\r\n        state: [],\r\n        hotState,\r\n    });\r\n    const partialStore = {\r\n        _p: pinia,\r\n        // _s: scope,\r\n        $id,\r\n        $onAction: addSubscription.bind(null, actionSubscriptions),\r\n        $patch,\r\n        $reset,\r\n        $subscribe(callback, options = {}) {\r\n            const removeSubscription = addSubscription(subscriptions, callback, options.detached, () => stopWatcher());\r\n            const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], (state) => {\r\n                if (options.flush === 'sync' ? isSyncListening : isListening) {\r\n                    callback({\r\n                        storeId: $id,\r\n                        type: MutationType.direct,\r\n                        events: debuggerEvents,\r\n                    }, state);\r\n                }\r\n            }, assign({}, $subscribeOptions, options)));\r\n            return removeSubscription;\r\n        },\r\n        $dispose,\r\n    };\r\n    /* istanbul ignore if */\r\n    if (isVue2) {\r\n        // start as non ready\r\n        partialStore._r = false;\r\n    }\r\n    const store = reactive(assign((process.env.NODE_ENV !== 'production') && IS_CLIENT\r\n        ? // devtools custom properties\r\n            {\r\n                _customProperties: markRaw(new Set()),\r\n                _hmrPayload,\r\n            }\r\n        : {}, partialStore\r\n    // must be added later\r\n    // setupStore\r\n    ));\r\n    // store the partial store now so the setup of stores can instantiate each other before they are finished without\r\n    // creating infinite loops.\r\n    pinia._s.set($id, store);\r\n    // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\r\n    const setupStore = pinia._e.run(() => {\r\n        scope = effectScope();\r\n        return scope.run(() => setup());\r\n    });\r\n    // overwrite existing actions to support $onAction\r\n    for (const key in setupStore) {\r\n        const prop = setupStore[key];\r\n        if ((isRef(prop) && !isComputed(prop)) || isReactive(prop)) {\r\n            // mark it as a piece of state to be serialized\r\n            if ((process.env.NODE_ENV !== 'production') && hot) {\r\n                set(hotState.value, key, toRef(setupStore, key));\r\n                // createOptionStore directly sets the state in pinia.state.value so we\r\n                // can just skip that\r\n            }\r\n            else if (!isOptionsStore) {\r\n                // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\r\n                if (initialState && shouldHydrate(prop)) {\r\n                    if (isRef(prop)) {\r\n                        prop.value = initialState[key];\r\n                    }\r\n                    else {\r\n                        // probably a reactive object, lets recursively assign\r\n                        mergeReactiveObjects(prop, initialState[key]);\r\n                    }\r\n                }\r\n                // transfer the ref to the pinia state to keep everything in sync\r\n                /* istanbul ignore if */\r\n                if (isVue2) {\r\n                    set(pinia.state.value[$id], key, prop);\r\n                }\r\n                else {\r\n                    pinia.state.value[$id][key] = prop;\r\n                }\r\n            }\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                _hmrPayload.state.push(key);\r\n            }\r\n            // action\r\n        }\r\n        else if (typeof prop === 'function') {\r\n            // @ts-expect-error: we are overriding the function we avoid wrapping if\r\n            const actionValue = (process.env.NODE_ENV !== 'production') && hot ? prop : wrapAction(key, prop);\r\n            // this a hot module replacement store because the hotUpdate method needs\r\n            // to do it with the right context\r\n            /* istanbul ignore if */\r\n            if (isVue2) {\r\n                set(setupStore, key, actionValue);\r\n            }\r\n            else {\r\n                // @ts-expect-error\r\n                setupStore[key] = actionValue;\r\n            }\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                _hmrPayload.actions[key] = prop;\r\n            }\r\n            // list actions so they can be used in plugins\r\n            // @ts-expect-error\r\n            optionsForPlugin.actions[key] = prop;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            // add getters for devtools\r\n            if (isComputed(prop)) {\r\n                _hmrPayload.getters[key] = isOptionsStore\r\n                    ? // @ts-expect-error\r\n                        options.getters[key]\r\n                    : prop;\r\n                if (IS_CLIENT) {\r\n                    const getters = \r\n                    // @ts-expect-error: it should be on the store\r\n                    setupStore._getters || (setupStore._getters = markRaw([]));\r\n                    getters.push(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // add the state, getters, and action properties\r\n    /* istanbul ignore if */\r\n    if (isVue2) {\r\n        Object.keys(setupStore).forEach((key) => {\r\n            set(store, key, \r\n            // @ts-expect-error: valid key indexing\r\n            setupStore[key]);\r\n        });\r\n    }\r\n    else {\r\n        assign(store, setupStore);\r\n        // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\r\n        // Make `storeToRefs()` work with `reactive()` #799\r\n        assign(toRaw(store), setupStore);\r\n    }\r\n    // use this instead of a computed with setter to be able to create it anywhere\r\n    // without linking the computed lifespan to wherever the store is first\r\n    // created.\r\n    Object.defineProperty(store, '$state', {\r\n        get: () => ((process.env.NODE_ENV !== 'production') && hot ? hotState.value : pinia.state.value[$id]),\r\n        set: (state) => {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && hot) {\r\n                throw new Error('cannot set hotState');\r\n            }\r\n            $patch(($state) => {\r\n                assign($state, state);\r\n            });\r\n        },\r\n    });\r\n    // add the hotUpdate before plugins to allow them to override it\r\n    /* istanbul ignore else */\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        store._hotUpdate = markRaw((newStore) => {\r\n            store._hotUpdating = true;\r\n            newStore._hmrPayload.state.forEach((stateKey) => {\r\n                if (stateKey in store.$state) {\r\n                    const newStateTarget = newStore.$state[stateKey];\r\n                    const oldStateSource = store.$state[stateKey];\r\n                    if (typeof newStateTarget === 'object' &&\r\n                        isPlainObject(newStateTarget) &&\r\n                        isPlainObject(oldStateSource)) {\r\n                        patchObject(newStateTarget, oldStateSource);\r\n                    }\r\n                    else {\r\n                        // transfer the ref\r\n                        newStore.$state[stateKey] = oldStateSource;\r\n                    }\r\n                }\r\n                // patch direct access properties to allow store.stateProperty to work as\r\n                // store.$state.stateProperty\r\n                set(store, stateKey, toRef(newStore.$state, stateKey));\r\n            });\r\n            // remove deleted state properties\r\n            Object.keys(store.$state).forEach((stateKey) => {\r\n                if (!(stateKey in newStore.$state)) {\r\n                    del(store, stateKey);\r\n                }\r\n            });\r\n            // avoid devtools logging this as a mutation\r\n            isListening = false;\r\n            isSyncListening = false;\r\n            pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\r\n            isSyncListening = true;\r\n            nextTick().then(() => {\r\n                isListening = true;\r\n            });\r\n            for (const actionName in newStore._hmrPayload.actions) {\r\n                const action = newStore[actionName];\r\n                set(store, actionName, wrapAction(actionName, action));\r\n            }\r\n            // TODO: does this work in both setup and option store?\r\n            for (const getterName in newStore._hmrPayload.getters) {\r\n                const getter = newStore._hmrPayload.getters[getterName];\r\n                const getterValue = isOptionsStore\r\n                    ? // special handling of options api\r\n                        computed(() => {\r\n                            setActivePinia(pinia);\r\n                            return getter.call(store, store);\r\n                        })\r\n                    : getter;\r\n                set(store, getterName, getterValue);\r\n            }\r\n            // remove deleted getters\r\n            Object.keys(store._hmrPayload.getters).forEach((key) => {\r\n                if (!(key in newStore._hmrPayload.getters)) {\r\n                    del(store, key);\r\n                }\r\n            });\r\n            // remove old actions\r\n            Object.keys(store._hmrPayload.actions).forEach((key) => {\r\n                if (!(key in newStore._hmrPayload.actions)) {\r\n                    del(store, key);\r\n                }\r\n            });\r\n            // update the values used in devtools and to allow deleting new properties later on\r\n            store._hmrPayload = newStore._hmrPayload;\r\n            store._getters = newStore._getters;\r\n            store._hotUpdating = false;\r\n        });\r\n        const nonEnumerable = {\r\n            writable: true,\r\n            configurable: true,\r\n            // avoid warning on devtools trying to display this property\r\n            enumerable: false,\r\n        };\r\n        if (IS_CLIENT) {\r\n            ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach((p) => {\r\n                Object.defineProperty(store, p, {\r\n                    value: store[p],\r\n                    ...nonEnumerable,\r\n                });\r\n            });\r\n        }\r\n    }\r\n    /* istanbul ignore if */\r\n    if (isVue2) {\r\n        // mark the store as ready before plugins\r\n        store._r = true;\r\n    }\r\n    // apply all plugins\r\n    pinia._p.forEach((extender) => {\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production') && IS_CLIENT) {\r\n            const extensions = scope.run(() => extender({\r\n                store,\r\n                app: pinia._a,\r\n                pinia,\r\n                options: optionsForPlugin,\r\n            }));\r\n            Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));\r\n            assign(store, extensions);\r\n        }\r\n        else {\r\n            assign(store, scope.run(() => extender({\r\n                store,\r\n                app: pinia._a,\r\n                pinia,\r\n                options: optionsForPlugin,\r\n            })));\r\n        }\r\n    });\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        store.$state &&\r\n        typeof store.$state === 'object' &&\r\n        typeof store.$state.constructor === 'function' &&\r\n        !store.$state.constructor.toString().includes('[native code]')) {\r\n        console.warn(`[🍍]: The \"state\" must be a plain object. It cannot be\\n` +\r\n            `\\tstate: () => new MyClass()\\n` +\r\n            `Found in store \"${store.$id}\".`);\r\n    }\r\n    // only apply hydrate to option stores with an initial state in pinia\r\n    if (initialState &&\r\n        isOptionsStore &&\r\n        options.hydrate) {\r\n        options.hydrate(store.$state, initialState);\r\n    }\r\n    isListening = true;\r\n    isSyncListening = true;\r\n    return store;\r\n}\r\nfunction defineStore(\r\n// TODO: add proper types from above\r\nidOrOptions, setup, setupOptions) {\r\n    let id;\r\n    let options;\r\n    const isSetupStore = typeof setup === 'function';\r\n    if (typeof idOrOptions === 'string') {\r\n        id = idOrOptions;\r\n        // the option store setup will contain the actual options in this case\r\n        options = isSetupStore ? setupOptions : setup;\r\n    }\r\n    else {\r\n        options = idOrOptions;\r\n        id = idOrOptions.id;\r\n    }\r\n    function useStore(pinia, hot) {\r\n        const currentInstance = getCurrentInstance();\r\n        pinia =\r\n            // in test mode, ignore the argument provided as we can always retrieve a\r\n            // pinia instance with getActivePinia()\r\n            ((process.env.NODE_ENV === 'test') && activePinia && activePinia._testing ? null : pinia) ||\r\n                (currentInstance && inject(piniaSymbol));\r\n        if (pinia)\r\n            setActivePinia(pinia);\r\n        if ((process.env.NODE_ENV !== 'production') && !activePinia) {\r\n            throw new Error(`[🍍]: getActivePinia was called with no active Pinia. Did you forget to install pinia?\\n` +\r\n                `\\tconst pinia = createPinia()\\n` +\r\n                `\\tapp.use(pinia)\\n` +\r\n                `This will fail in production.`);\r\n        }\r\n        pinia = activePinia;\r\n        if (!pinia._s.has(id)) {\r\n            // creating the store registers it in `pinia._s`\r\n            if (isSetupStore) {\r\n                createSetupStore(id, setup, options, pinia);\r\n            }\r\n            else {\r\n                createOptionsStore(id, options, pinia);\r\n            }\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                // @ts-expect-error: not the right inferred type\r\n                useStore._pinia = pinia;\r\n            }\r\n        }\r\n        const store = pinia._s.get(id);\r\n        if ((process.env.NODE_ENV !== 'production') && hot) {\r\n            const hotId = '__hot:' + id;\r\n            const newStore = isSetupStore\r\n                ? createSetupStore(hotId, setup, options, pinia, true)\r\n                : createOptionsStore(hotId, assign({}, options), pinia, true);\r\n            hot._hotUpdate(newStore);\r\n            // cleanup the state properties and the store from the cache\r\n            delete pinia.state.value[hotId];\r\n            pinia._s.delete(hotId);\r\n        }\r\n        // save stores in instances to access them devtools\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            IS_CLIENT &&\r\n            currentInstance &&\r\n            currentInstance.proxy &&\r\n            // avoid adding stores that are just built for hot module replacement\r\n            !hot) {\r\n            const vm = currentInstance.proxy;\r\n            const cache = '_pStores' in vm ? vm._pStores : (vm._pStores = {});\r\n            cache[id] = store;\r\n        }\r\n        // StoreGeneric cannot be casted towards Store\r\n        return store;\r\n    }\r\n    useStore.$id = id;\r\n    return useStore;\r\n}\n\nlet mapStoreSuffix = 'Store';\r\n/**\r\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\r\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\r\n * interface if you are using TypeScript.\r\n *\r\n * @param suffix - new suffix\r\n */\r\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\r\n) {\r\n    mapStoreSuffix = suffix;\r\n}\r\n/**\r\n * Allows using stores without the composition API (`setup()`) by generating an\r\n * object to be spread in the `computed` field of a component. It accepts a list\r\n * of store definitions.\r\n *\r\n * @example\r\n * ```js\r\n * export default {\r\n *   computed: {\r\n *     // other computed properties\r\n *     ...mapStores(useUserStore, useCartStore)\r\n *   },\r\n *\r\n *   created() {\r\n *     this.userStore // store with id \"user\"\r\n *     this.cartStore // store with id \"cart\"\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * @param stores - list of stores to map to an object\r\n */\r\nfunction mapStores(...stores) {\r\n    if ((process.env.NODE_ENV !== 'production') && Array.isArray(stores[0])) {\r\n        console.warn(`[🍍]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` +\r\n            `Replace\\n` +\r\n            `\\tmapStores([useAuthStore, useCartStore])\\n` +\r\n            `with\\n` +\r\n            `\\tmapStores(useAuthStore, useCartStore)\\n` +\r\n            `This will fail in production if not fixed.`);\r\n        stores = stores[0];\r\n    }\r\n    return stores.reduce((reduced, useStore) => {\r\n        // @ts-expect-error: $id is added by defineStore\r\n        reduced[useStore.$id + mapStoreSuffix] = function () {\r\n            return useStore(this.$pinia);\r\n        };\r\n        return reduced;\r\n    }, {});\r\n}\r\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\r\nfunction mapState(useStore, keysOrMapper) {\r\n    return Array.isArray(keysOrMapper)\r\n        ? keysOrMapper.reduce((reduced, key) => {\r\n            reduced[key] = function () {\r\n                return useStore(this.$pinia)[key];\r\n            };\r\n            return reduced;\r\n        }, {})\r\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\r\n            // @ts-expect-error\r\n            reduced[key] = function () {\r\n                const store = useStore(this.$pinia);\r\n                const storeKey = keysOrMapper[key];\r\n                // for some reason TS is unable to infer the type of storeKey to be a\r\n                // function\r\n                return typeof storeKey === 'function'\r\n                    ? storeKey.call(this, store)\r\n                    : store[storeKey];\r\n            };\r\n            return reduced;\r\n        }, {});\r\n}\r\n/**\r\n * Alias for `mapState()`. You should use `mapState()` instead.\r\n * @deprecated use `mapState()` instead.\r\n */\r\nconst mapGetters = mapState;\r\n/**\r\n * Allows directly using actions from your store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `methods` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\r\nfunction mapActions(useStore, keysOrMapper) {\r\n    return Array.isArray(keysOrMapper)\r\n        ? keysOrMapper.reduce((reduced, key) => {\r\n            // @ts-expect-error\r\n            reduced[key] = function (...args) {\r\n                return useStore(this.$pinia)[key](...args);\r\n            };\r\n            return reduced;\r\n        }, {})\r\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\r\n            // @ts-expect-error\r\n            reduced[key] = function (...args) {\r\n                return useStore(this.$pinia)[keysOrMapper[key]](...args);\r\n            };\r\n            return reduced;\r\n        }, {});\r\n}\r\n/**\r\n * Allows using state and getters from one store without using the composition\r\n * API (`setup()`) by generating an object to be spread in the `computed` field\r\n * of a component.\r\n *\r\n * @param useStore - store to map from\r\n * @param keysOrMapper - array or object\r\n */\r\nfunction mapWritableState(useStore, keysOrMapper) {\r\n    return Array.isArray(keysOrMapper)\r\n        ? keysOrMapper.reduce((reduced, key) => {\r\n            // @ts-ignore\r\n            reduced[key] = {\r\n                get() {\r\n                    return useStore(this.$pinia)[key];\r\n                },\r\n                set(value) {\r\n                    // it's easier to type it here as any\r\n                    return (useStore(this.$pinia)[key] = value);\r\n                },\r\n            };\r\n            return reduced;\r\n        }, {})\r\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\r\n            // @ts-ignore\r\n            reduced[key] = {\r\n                get() {\r\n                    return useStore(this.$pinia)[keysOrMapper[key]];\r\n                },\r\n                set(value) {\r\n                    // it's easier to type it here as any\r\n                    return (useStore(this.$pinia)[keysOrMapper[key]] = value);\r\n                },\r\n            };\r\n            return reduced;\r\n        }, {});\r\n}\n\n/**\r\n * Creates an object of references with all the state, getters, and plugin-added\r\n * state properties of the store. Similar to `toRefs()` but specifically\r\n * designed for Pinia stores so methods and non reactive properties are\r\n * completely ignored.\r\n *\r\n * @param store - store to extract the refs from\r\n */\r\nfunction storeToRefs(store) {\r\n    // See https://github.com/vuejs/pinia/issues/852\r\n    // It's easier to just use toRefs() even if it includes more stuff\r\n    if (isVue2) {\r\n        // @ts-expect-error: toRefs include methods and others\r\n        return toRefs(store);\r\n    }\r\n    else {\r\n        store = toRaw(store);\r\n        const refs = {};\r\n        for (const key in store) {\r\n            const value = store[key];\r\n            if (isRef(value) || isReactive(value)) {\r\n                // @ts-expect-error: the key is state or getter\r\n                refs[key] =\r\n                    // ---\r\n                    toRef(store, key);\r\n            }\r\n        }\r\n        return refs;\r\n    }\r\n}\n\n/**\r\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\r\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\r\n * https://pinia.vuejs.org/ssr/nuxt.html.\r\n *\r\n * @example\r\n * ```js\r\n * import Vue from 'vue'\r\n * import { PiniaVuePlugin, createPinia } from 'pinia'\r\n *\r\n * Vue.use(PiniaVuePlugin)\r\n * const pinia = createPinia()\r\n *\r\n * new Vue({\r\n *   el: '#app',\r\n *   // ...\r\n *   pinia,\r\n * })\r\n * ```\r\n *\r\n * @param _Vue - `Vue` imported from 'vue'.\r\n */\r\nconst PiniaVuePlugin = function (_Vue) {\r\n    // Equivalent of\r\n    // app.config.globalProperties.$pinia = pinia\r\n    _Vue.mixin({\r\n        beforeCreate() {\r\n            const options = this.$options;\r\n            if (options.pinia) {\r\n                const pinia = options.pinia;\r\n                // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\r\n                /* istanbul ignore else */\r\n                if (!this._provided) {\r\n                    const provideCache = {};\r\n                    Object.defineProperty(this, '_provided', {\r\n                        get: () => provideCache,\r\n                        set: (v) => Object.assign(provideCache, v),\r\n                    });\r\n                }\r\n                this._provided[piniaSymbol] = pinia;\r\n                // propagate the pinia instance in an SSR friendly way\r\n                // avoid adding it to nuxt twice\r\n                /* istanbul ignore else */\r\n                if (!this.$pinia) {\r\n                    this.$pinia = pinia;\r\n                }\r\n                pinia._a = this;\r\n                if (IS_CLIENT) {\r\n                    // this allows calling useStore() outside of a component setup after\r\n                    // installing pinia's plugin\r\n                    setActivePinia(pinia);\r\n                }\r\n                if (USE_DEVTOOLS) {\r\n                    registerPiniaDevtools(pinia._a, pinia);\r\n                }\r\n            }\r\n            else if (!this.$pinia && options.parent && options.parent.$pinia) {\r\n                this.$pinia = options.parent.$pinia;\r\n            }\r\n        },\r\n        destroyed() {\r\n            delete this._pStores;\r\n        },\r\n    });\r\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}